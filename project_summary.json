{
  "files": [
    {
      "file": "./aaa.py",
      "imports": [
        "core.data_provider.fetch_stock_data"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.index.max",
        "df.index.max.date",
        "df.index.min",
        "df.index.min.date",
        "df.tail",
        "fetch_stock_data",
        "len",
        "print"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 15,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 6.0,
      "sha1": "34f28a23736e52fb05021b77461d3bb265e57dc9",
      "last_modified": "2025-05-21T08:16:24",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./aab.py",
      "imports": [
        "argparse",
        "ast",
        "collections.Counter",
        "collections.defaultdict",
        "hashlib",
        "json",
        "os",
        "re",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Counter",
        "FEATURE_VOCAB.most_common",
        "TABLE_VOCAB.most_common",
        "any",
        "append",
        "argparse.ArgumentParser",
        "ast.get_docstring",
        "ast.iter_child_nodes",
        "ast.parse",
        "ast.walk",
        "attach_parents",
        "calls_into.add",
        "compute_cyclomatic_complexity",
        "config.get",
        "config.get.get",
        "config.get.keys",
        "config.setdefault",
        "configured_funcs.items",
        "configured_io.items",
        "custom_tags.append",
        "db_tables.add",
        "defaultdict",
        "dict",
        "dirpath.replace",
        "excl_dir.startswith",
        "exit",
        "extract_configured_io_calls",
        "extract_db_tables_and_features",
        "extract_general_data_flow",
        "f.read",
        "features.add",
        "file_contents.splitlines",
        "file_info.get",
        "filename.endswith",
        "filepath.endswith",
        "filepath.replace",
        "get",
        "get_docstring_info",
        "get_qualified_call_name",
        "hasattr",
        "hash_file_contents",
        "hashlib.sha1",
        "hashlib.sha1.hexdigest",
        "imp.startswith",
        "isinstance",
        "item.get",
        "json.dump",
        "json.load",
        "len",
        "list",
        "load_config",
        "main",
        "max",
        "missing_docstrings_list.append",
        "open",
        "os.path.abspath",
        "os.path.basename",
        "os.path.dirname",
        "os.path.dirname.split",
        "os.path.getmtime",
        "os.path.join",
        "os.path.relpath",
        "os.path.relpath.replace",
        "os.walk",
        "parse_python_file",
        "parsed_info.get",
        "parser.add_argument",
        "parser.parse_args",
        "print",
        "project_data.append",
        "project_dependencies.append",
        "qualified_name.split",
        "raw_imports.extend",
        "re.findall",
        "re.search",
        "round",
        "scan_project",
        "set",
        "setdefault",
        "sorted",
        "strip",
        "sum",
        "time.localtime",
        "time.strftime",
        "transforms_applied.add",
        "tuple"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "db_table",
        "extract_db_table",
        "pivot_table"
      ],
      "features_identified": [],
      "function_count": 12,
      "class_count": 0,
      "loc": 472,
      "cyclomatic_complexity": 107,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_config",
        "attach_parents",
        "compute_cyclomatic_complexity",
        "get_docstring_info",
        "hash_file_contents",
        "get_qualified_call_name",
        "extract_general_data_flow",
        "extract_configured_io_calls",
        "extract_db_tables_and_features",
        "parse_python_file",
        "scan_project",
        "main"
      ],
      "risk_score": 5050.4,
      "sha1": "30c7ea6aaf73d18edae462ebdd1e25a5cca3a0a2",
      "last_modified": "2025-05-26T14:42:28",
      "custom_tags": [],
      "risk_flags": [
        "high_LOC (>300)",
        "high_complexity (>15)",
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./generate_project_summary.py",
      "imports": [
        "argparse",
        "ast",
        "collections.Counter",
        "collections.defaultdict",
        "hashlib",
        "json",
        "os",
        "re",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Counter",
        "FEATURE_VOCAB.most_common",
        "TABLE_VOCAB.most_common",
        "any",
        "append",
        "argparse.ArgumentParser",
        "ast.get_docstring",
        "ast.iter_child_nodes",
        "ast.parse",
        "ast.walk",
        "attach_parents",
        "calls_into.add",
        "compute_cyclomatic_complexity",
        "db_tables.add",
        "defaultdict",
        "detect_metrics_used",
        "dict",
        "extract_data_flow_info",
        "extract_intervals_and_db_tables",
        "extract_model_names_from_calls",
        "f.read",
        "file_contents.lower",
        "file_contents.lower.splitlines",
        "file_contents.splitlines",
        "filename.endswith",
        "filepath.endswith",
        "filepath.lower",
        "filepath.replace",
        "get_docstring_coverage",
        "get_missing_docstrings",
        "get_priority",
        "getattr",
        "hash_file_contents",
        "hashlib.sha1",
        "hashlib.sha1.hexdigest",
        "imp.startswith",
        "imports.extend",
        "infer_category_and_subsystem",
        "info.get",
        "input_tables.add",
        "intervals.add",
        "isinstance",
        "json.dump",
        "keywords.get",
        "len",
        "main",
        "missing.append",
        "model_name.endswith",
        "models_saved.append",
        "models_used.append",
        "models_used_paths.append",
        "node.s.lower",
        "open",
        "os.path.basename",
        "os.path.getmtime",
        "os.path.join",
        "os.path.relpath",
        "os.path.relpath.replace",
        "os.walk",
        "output_tables.add",
        "parse_python_file",
        "parsed.get",
        "parser.add_argument",
        "parser.parse_args",
        "print",
        "project_data.append",
        "re.findall",
        "re.match",
        "reads_from.add",
        "round",
        "scan_project",
        "set",
        "sorted",
        "strip",
        "sum",
        "time.localtime",
        "time.strftime",
        "transforms.add",
        "used_features.add",
        "writes_to.add"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "db_table",
        "extract_intervals_and_db_table",
        "input_table",
        "output_table"
      ],
      "features_identified": [],
      "function_count": 15,
      "class_count": 0,
      "loc": 359,
      "cyclomatic_complexity": 82,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "attach_parents",
        "compute_cyclomatic_complexity",
        "get_docstring_coverage",
        "get_missing_docstrings",
        "hash_file_contents",
        "get_priority",
        "infer_category_and_subsystem",
        "extract_model_names_from_calls",
        "extract_intervals_and_db_tables",
        "detect_metrics_used",
        "scan_project",
        "main",
        "extract_data_flow_info",
        "parse_python_file",
        "extract_additional_data_signals"
      ],
      "risk_score": 2943.8,
      "sha1": "7f17aa3aebe7a4b5880df46b77928677fad72aaf",
      "last_modified": "2025-05-24T00:56:21",
      "custom_tags": [],
      "risk_flags": [
        "high_LOC (>300)",
        "high_complexity (>15)",
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./generate_project_summary_txt.py",
      "imports": [
        "argparse",
        "ast",
        "core.logger.logger",
        "os",
        "textwrap"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "append",
        "argparse.ArgumentParser",
        "ast.get_docstring",
        "ast.iter_child_nodes",
        "ast.parse",
        "ast.walk",
        "attach_parents",
        "build_tree_and_extract",
        "data_access.append",
        "e.endswith",
        "e.startswith",
        "enumerate",
        "extract_data_access_summary",
        "f.read",
        "f.write",
        "file_info.get",
        "filename.endswith",
        "filepath.replace",
        "filtered_entries.append",
        "final_lines.append",
        "final_lines.extend",
        "getattr",
        "isinstance",
        "keywords.get",
        "len",
        "lines.append",
        "lines.extend",
        "logger.info",
        "main",
        "methods.append",
        "open",
        "os.listdir",
        "os.path.abspath",
        "os.path.basename",
        "os.path.isdir",
        "os.path.join",
        "os.path.relpath",
        "os.path.relpath.replace",
        "os.walk",
        "parse_python_file",
        "parser.add_argument",
        "parser.parse_args",
        "path.endswith",
        "path.replace",
        "real_ast_parse",
        "set",
        "sorted",
        "strip",
        "textwrap.fill",
        "textwrap.indent"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 6,
      "class_count": 0,
      "loc": 197,
      "cyclomatic_complexity": 47,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "parse_python_file",
        "attach_parents",
        "extract_data_access_summary",
        "build_tree_and_extract",
        "main",
        "parse_with_parent"
      ],
      "risk_score": 925.9,
      "sha1": "c372998c65cdefef222cb77be02b1a2a40903054",
      "last_modified": "2025-05-24T00:01:57",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./generate_stock_labels.py",
      "imports": [
        "core.logger.logger",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "apply",
        "copy",
        "df.dropna",
        "df.groupby",
        "generate_labels",
        "logger.error",
        "logger.success",
        "logger.warning",
        "mean",
        "mean.reset_index",
        "os.path.exists",
        "pd.read_csv",
        "pd.to_numeric",
        "summary.to_csv"
      ],
      "transforms_applied": [
        "apply",
        "groupby"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:TRADES_FILE",
          "line_number": 15
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 36,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_labels"
      ],
      "risk_score": 14.4,
      "sha1": "170ca1a0cb1987078006fe1ddfb4a58b65623e02",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./generate_training_data.py",
      "imports": [
        "core.logger.logger",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "col.lower",
        "col.lower.strip",
        "dropna",
        "len",
        "logger.error",
        "logger.success",
        "main",
        "merged.to_csv",
        "os.path.exists",
        "pd.read_csv",
        "recs.apply",
        "recs.merge"
      ],
      "transforms_applied": [
        "apply",
        "merge"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:RECOMMENDATIONS_CSV",
          "line_number": 15
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:FUNDAMENTALS_CSV",
          "line_number": 16
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 44,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "main"
      ],
      "risk_score": 22.0,
      "sha1": "2037ae7c837283b25cb84cf81dd814d0d89a75b1",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./hpo.py",
      "imports": [
        "models.meta_strategy_selector.train_meta_model",
        "models.train_dual_model_sql.train_dual_model",
        "models.train_stock_filter_model.train_stock_filter_model"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "train_dual_model",
        "train_meta_model",
        "train_stock_filter_model"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 9,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.8,
      "sha1": "4c6237177185e4b773d6045a9bc65840dd015901",
      "last_modified": "2025-05-04T19:34:53",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./paper_trader.py",
      "imports": [
        "core.logger.logger",
        "datetime.datetime",
        "os",
        "pandas",
        "yfinance"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "check_exit_condition",
        "datetime.now",
        "datetime.now.strftime",
        "df.to_csv",
        "enter_trades",
        "exit_trades",
        "exited_trades.append",
        "len",
        "load_open_positions",
        "load_recommendations",
        "load_today_price",
        "log_trades",
        "logger.info",
        "logger.start",
        "logger.success",
        "main",
        "new_positions.append",
        "open_positions.iterrows",
        "open_positions.to_csv",
        "os.path.exists",
        "pd.DataFrame",
        "pd.concat",
        "pd.isna",
        "pd.read_csv",
        "recommendations.iterrows",
        "remaining.append",
        "rolling",
        "rolling.mean",
        "yf.download"
      ],
      "transforms_applied": [
        "concat",
        "rolling"
      ],
      "modifies_stream": true,
      "data_write_operations": [
        {
          "function_called": "df.to_csv",
          "target_argument": "var:TRADE_LOG_CSV",
          "line_number": 103
        }
      ],
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:RECOMMENDATIONS_CSV",
          "line_number": 16
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:OPEN_POSITIONS_CSV",
          "line_number": 21
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:TRADE_LOG_CSV",
          "line_number": 101
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 8,
      "class_count": 0,
      "loc": 121,
      "cyclomatic_complexity": 16,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_recommendations",
        "load_open_positions",
        "load_today_price",
        "enter_trades",
        "check_exit_condition",
        "exit_trades",
        "log_trades",
        "main"
      ],
      "risk_score": 193.6,
      "sha1": "ef7c9650cf144a820f1e00abe080e14fa44d3d4c",
      "last_modified": "2025-04-27T08:51:12",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./report_generator.py",
      "imports": [
        "core.logger.logger",
        "datetime.datetime",
        "matplotlib.pyplot",
        "os",
        "pandas",
        "yfinance"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "agg",
        "analyze_open_positions",
        "analyze_trades",
        "datetime.now",
        "fetch_current_price",
        "float",
        "len",
        "load_data",
        "logger.info",
        "logger.success",
        "logger.warning",
        "main",
        "mean",
        "mean.sort_values",
        "mean.sort_values.plot",
        "open_df.iterrows",
        "os.path.exists",
        "os.path.join",
        "pd.DataFrame",
        "pd.read_csv",
        "pd.to_datetime",
        "plt.axhline",
        "plt.bar",
        "plt.close",
        "plt.figure",
        "plt.savefig",
        "plt.tight_layout",
        "plt.title",
        "plt.xlabel",
        "plt.ylabel",
        "pnl_data.append",
        "round",
        "sell_trades.groupby",
        "str.lower",
        "trades_df.tail",
        "yf.download"
      ],
      "transforms_applied": [
        "groupby",
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 113
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:TRADES_FILE",
          "line_number": 15
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:OPEN_POSITIONS_FILE",
          "line_number": 16
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 120,
      "cyclomatic_complexity": 12,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_data",
        "analyze_trades",
        "fetch_current_price",
        "analyze_open_positions",
        "main"
      ],
      "risk_score": 144.0,
      "sha1": "8b642a9bcaf936d7cfae663e6a04d0e8552e54fd",
      "last_modified": "2025-04-27T08:51:13",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./train_strategy_selector.py",
      "imports": [
        "core.logger.logger",
        "pandas",
        "pickle",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.model_selection.train_test_split",
        "sklearn.multioutput.MultiOutputRegressor"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "MultiOutputRegressor",
        "RandomForestRegressor",
        "df.dropna",
        "logger.info",
        "logger.success",
        "model.fit",
        "model.predict",
        "open",
        "pd.DataFrame",
        "pd.read_csv",
        "pickle.dump",
        "train_strategy_selector",
        "train_test_split"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:INPUT_CSV",
          "line_number": 13
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 38,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "train_strategy_selector"
      ],
      "risk_score": 11.4,
      "sha1": "23b80596c76b19ff42e80d79ea87cb91483a8ca5",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./agents/execution_agent_sql.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.data_provider.load_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.system_logger.log_event",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.postgres_manager.run_query",
        "db.replay_buffer_sql.insert_replay_episode",
        "json",
        "os",
        "pandas",
        "rl.replay_buffer.ReplayBuffer",
        "services.exit_policy_evaluator.get_exit_probability",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "astype",
        "df.head",
        "df.rename",
        "enrich_multi_interval_features",
        "entry_logs.append",
        "exited.append",
        "fetch_stock_data",
        "filter_preds.append",
        "get_exit_probability",
        "get_simulation_date",
        "insert_replay_episode",
        "insert_with_conflict_handling",
        "int",
        "isinstance",
        "json.loads",
        "len",
        "load_data",
        "log_event",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "new_positions.append",
        "open_positions.copy",
        "open_positions.iterrows",
        "os.getenv",
        "os.makedirs",
        "param_preds.append",
        "pd.DataFrame",
        "pd.DataFrame.copy",
        "pd.DataFrame.copy.fillna",
        "pd.concat",
        "pd.notna",
        "pd.to_datetime",
        "pos.get",
        "remaining.append",
        "round",
        "run_query",
        "safe_load_table",
        "self.enter_trades",
        "self.exit_trades",
        "self.load_open_positions",
        "self.load_signals",
        "self.load_today_ohlc",
        "self.today.date",
        "self.today.strftime",
        "set",
        "sig.get",
        "signals.iterrows",
        "time.time",
        "to_dict",
        "tolist"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:name",
          "line_number": 32
        }
      ],
      "db_tables_identified": [
        "open_positions_table",
        "recommendations_table",
        "safe_load_table",
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 260,
      "cyclomatic_complexity": 30,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "safe_load_table",
        "ExecutionAgentSQL",
        "ExecutionAgentSQL.__init__",
        "ExecutionAgentSQL.load_signals",
        "ExecutionAgentSQL.load_open_positions",
        "ExecutionAgentSQL.load_today_ohlc",
        "ExecutionAgentSQL.exit_trades",
        "ExecutionAgentSQL.enter_trades",
        "ExecutionAgentSQL.run"
      ],
      "risk_score": 780.0,
      "sha1": "a9ab13e360c2f6109b5463803d3030f5ba8cd94e",
      "last_modified": "2025-05-26T01:37:42",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "high_complexity (>15)"
      ]
    },
    {
      "file": "./agents/intraday_planner_agent.py",
      "imports": [
        "agents.execution_agent_sql.ExecutionAgentSQL",
        "agents.risk_management_agent.RiskManagementAgent",
        "agents.rl_strategy_agent.RLStrategyAgent",
        "agents.signal_arbitration_agent.SignalArbitrationAgent",
        "agents.strategy_agent.StrategyAgent",
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.insert_with_conflict_handling",
        "core.time_context.get_simulation_date",
        "pandas",
        "random",
        "redis",
        "time",
        "tqdm.tqdm"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ExecutionAgentSQL",
        "IntradayPlannerAgent",
        "RLStrategyAgent",
        "RiskManagementAgent",
        "SignalArbitrationAgent",
        "StrategyAgent",
        "agent.run",
        "df.to_dict",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "final_signals.append",
        "get_simulation_date",
        "insert_with_conflict_handling",
        "len",
        "list",
        "load_data",
        "logger.info",
        "logger.success",
        "logger.warning",
        "min",
        "pd.DataFrame",
        "pd.DataFrame.sort_values",
        "pd.DataFrame.sort_values.head",
        "pd.to_datetime",
        "pd.to_datetime.normalize",
        "random.shuffle",
        "redis.Redis",
        "self._fallback_poll",
        "self._fetch_updated_symbols",
        "self._process_symbols",
        "self.execution_agent.enter_trades",
        "self.execution_agent.exit_trades",
        "self.redis.rpop",
        "self.risk_agent.approve",
        "self.rl_agent.evaluate",
        "self.signal_arbitrator.arbitrate",
        "self.strategy_agent.evaluate",
        "self.today.date",
        "set",
        "signals.append",
        "sigs.append",
        "sym.decode",
        "symbols.append",
        "time.sleep",
        "time.time",
        "tqdm"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 49
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 102
        }
      ],
      "db_tables_identified": [
        "open_positions_table",
        "recommendations_table",
        "selected_table",
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 138,
      "cyclomatic_complexity": 20,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "IntradayPlannerAgent",
        "IntradayPlannerAgent.__init__",
        "IntradayPlannerAgent._fetch_updated_symbols",
        "IntradayPlannerAgent._fallback_poll",
        "IntradayPlannerAgent._process_symbols",
        "IntradayPlannerAgent.run",
        "IntradayPlannerAgent.run_forever"
      ],
      "risk_score": 276.0,
      "sha1": "7fd8941e1ba74ecddc4c05098364adab861b25be",
      "last_modified": "2025-05-25T23:50:18",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "high_complexity (>15)"
      ]
    },
    {
      "file": "./agents/memory_agent.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.save_model",
        "core.system_logger.log_event",
        "core.time_context.get_simulation_date",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.postgres_manager.run_query",
        "db.replay_buffer_sql.count_by_stock",
        "models.meta_strategy_selector.train_meta_model",
        "models.train_dual_model_sql.train_dual_model",
        "models.train_exit_model.train_exit_model",
        "models.train_stock_filter_model.train_stock_filter_model",
        "pandas",
        "rl.rl_finetune.finetune_rl",
        "services.feedback_loop.update_training_data"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "MemoryAgent",
        "MemoryAgent.update",
        "count_by_stock",
        "finetune_rl",
        "get_simulation_date",
        "getattr",
        "len",
        "load_data",
        "log_event",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "pd.Timedelta",
        "pd.to_datetime",
        "pd.to_datetime.normalize",
        "returns.append",
        "row.get",
        "run_query",
        "save_model",
        "self.archive_table",
        "self.check_retraining_needed",
        "self.feedback_loop",
        "self.summarize_weekly_performance",
        "self.today.date",
        "self.today.strftime",
        "sorted",
        "sum",
        "today_trades.sort_values",
        "today_trades.sort_values.groupby",
        "top_stocks_with_replay_data",
        "train_dual_model",
        "train_exit_model",
        "train_meta_model",
        "train_stock_filter_model",
        "update_training_data",
        "zip"
      ],
      "transforms_applied": [
        "groupby",
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 56
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 85
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 86
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 109
        },
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 115
        },
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 119
        },
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 123
        }
      ],
      "db_tables_identified": [
        "archive_table",
        "trades_table",
        "training_data_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 161,
      "cyclomatic_complexity": 20,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "top_stocks_with_replay_data",
        "MemoryAgent",
        "MemoryAgent.__init__",
        "MemoryAgent.archive_table",
        "MemoryAgent.summarize_weekly_performance",
        "MemoryAgent.check_retraining_needed",
        "MemoryAgent.feedback_loop",
        "MemoryAgent.update"
      ],
      "risk_score": 322.0,
      "sha1": "87665525a41f7e78e4dc1f3b36fba545db7d0f8e",
      "last_modified": "2025-05-26T01:39:03",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "high_complexity (>15)"
      ]
    },
    {
      "file": "./agents/planner_agent_sql.py",
      "imports": [
        "agents.execution_agent_sql.ExecutionAgentSQL",
        "agents.memory_agent.MemoryAgent",
        "agents.risk_management_agent.RiskManagementAgent",
        "agents.rl_strategy_agent.RLStrategyAgent",
        "agents.signal_arbitration_agent.SignalArbitrationAgent",
        "agents.strategy_agent.StrategyAgent",
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.predict_param_model.predict_param_config",
        "core.predictor.predict_dual_model",
        "core.skiplist.add_to_skiplist",
        "core.skiplist.is_in_skiplist",
        "core.system_logger.log_event",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.db.SessionLocal",
        "db.models.Base",
        "db.postgres_manager.get_all_symbols",
        "db.postgres_manager.run_query",
        "fundamentals.fundamental_data_extractor",
        "pandas",
        "pytz",
        "random",
        "sqlalchemy.text",
        "stock_selecter.auto_filter_selector.auto_select_filter",
        "tqdm.tqdm",
        "warnings"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Base.metadata.create_all",
        "ExecutionAgentSQL",
        "MemoryAgent",
        "PlannerAgentSQL",
        "PlannerAgentSQL.run",
        "RLStrategyAgent",
        "RiskManagementAgent",
        "SessionLocal",
        "SignalArbitrationAgent",
        "StrategyAgent",
        "add_to_skiplist",
        "all_signals.append",
        "any",
        "auto_select_filter",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "enrich_multi_interval_features",
        "expected.date",
        "fde.fetch_all",
        "fetch_stock_data",
        "get_all_symbols",
        "get_simulation_date",
        "insert_with_conflict_handling",
        "inst.get",
        "inst.get.tolist",
        "is_in_skiplist",
        "len",
        "load_data",
        "log_event",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "max",
        "max_feat.date",
        "min",
        "pd.DataFrame",
        "pd.DataFrame.sort_values",
        "pd.DataFrame.sort_values.head",
        "pd.offsets.BDay",
        "pd.to_datetime",
        "pd.to_datetime.astimezone",
        "pd.to_datetime.astimezone.normalize",
        "pd.to_datetime.date",
        "pd.to_datetime.max",
        "pd.to_datetime.max.normalize",
        "pytz.timezone",
        "random.shuffle",
        "run_query",
        "self._evaluate_stocks",
        "self._execute_trades",
        "self._fetch_fundamentals",
        "self._fetch_price_history",
        "self._filter_stocks",
        "self._refresh_features",
        "self._update_systems",
        "self.execution_agent.run",
        "self.memory_agent.update",
        "self.rl_agent.evaluate",
        "self.session.close",
        "self.session.get_bind",
        "self.signal_arbitrator.arbitrate",
        "self.strategy_agent.evaluate",
        "self.strategy_agent.log_summary",
        "self.today.date",
        "set",
        "signals.append",
        "stock.upper",
        "str",
        "tolist",
        "tqdm",
        "warnings.filterwarnings"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 98
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 114
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 159
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 171
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 191
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 122
        }
      ],
      "db_tables_identified": [
        "feature_table",
        "fundamentals_table",
        "instruments_table",
        "recommendations_table",
        "selected_table",
        "skiplist_table"
      ],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 238,
      "cyclomatic_complexity": 28,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "PlannerAgentSQL",
        "PlannerAgentSQL.__init__",
        "PlannerAgentSQL.run",
        "PlannerAgentSQL._fetch_fundamentals",
        "PlannerAgentSQL._fetch_price_history",
        "PlannerAgentSQL._refresh_features",
        "PlannerAgentSQL._filter_stocks",
        "PlannerAgentSQL._evaluate_stocks",
        "PlannerAgentSQL._execute_trades",
        "PlannerAgentSQL._update_systems"
      ],
      "risk_score": 666.4,
      "sha1": "94ea01c505e53acec6df2a2b6ffbf323977c30b8",
      "last_modified": "2025-05-26T01:34:29",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "high_complexity (>15)"
      ]
    },
    {
      "file": "./agents/planner_router.py",
      "imports": [
        "agents.intraday_planner_agent.IntradayPlannerAgent",
        "agents.planner_agent_sql.PlannerAgentSQL",
        "core.logger.logger",
        "threading",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "IntradayPlannerAgent",
        "IntradayPlannerAgent.run_forever",
        "PlannerAgentSQL",
        "PlannerAgentSQL.run",
        "f.read",
        "intraday_thread.start",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "open",
        "run_all_planners",
        "run_daily_planner",
        "threading.Thread",
        "time.sleep"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 40,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "run_daily_planner",
        "run_intraday_loop",
        "run_all_planners"
      ],
      "risk_score": 24.0,
      "sha1": "26d7758e21b3f2903e4c32ca86f6782c589c2210",
      "last_modified": "2025-05-25T23:39:26",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./agents/portfolio_allocator.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "datetime.datetime",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "datetime.now",
        "filtered.append",
        "int",
        "len",
        "load_data",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.normalize",
        "row.get",
        "self.load_open_positions",
        "set",
        "signals.iterrows",
        "sum",
        "tolist"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 20
        }
      ],
      "db_tables_identified": [
        "open_positions_table"
      ],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 60,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "PortfolioAllocatorAgent",
        "PortfolioAllocatorAgent.__init__",
        "PortfolioAllocatorAgent.load_open_positions",
        "PortfolioAllocatorAgent.filter_signals"
      ],
      "risk_score": 60.0,
      "sha1": "f15cba4df552882f898bef0bb1bcbdf1f7730d65",
      "last_modified": "2025-05-26T00:19:29",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": []
    },
    {
      "file": "./agents/risk_management_agent.py",
      "imports": [
        "core.logger.logger",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "logger.info",
        "open_positions.iterrows",
        "pd.DataFrame",
        "updated_positions.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 29,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "RiskManagementAgent",
        "RiskManagementAgent.__init__",
        "RiskManagementAgent.apply_risk_controls"
      ],
      "risk_score": 14.5,
      "sha1": "ade9d695aa8aaf42380dcde42b09a1a9e9f5be0d",
      "last_modified": "2025-05-18T20:56:21",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./agents/rl_strategy_agent.py",
      "imports": [
        "core.logger.logger",
        "core.rl_predictor.load_policy",
        "core.rl_predictor.load_rl_frame",
        "core.time_context.get_simulation_date",
        "numpy",
        "pandas",
        "rl.envs.trading_env.TradingEnv",
        "stable_baselines3.common.vec_env.DummyVecEnv"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "TradingEnv",
        "env.reset",
        "env.step",
        "float",
        "get_simulation_date",
        "len",
        "load_policy",
        "load_rl_frame",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.Timestamp.now",
        "pd.to_datetime",
        "pd.to_datetime.date",
        "policy.predict",
        "range",
        "self._evaluate_reward"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 79,
      "cyclomatic_complexity": 11,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "RLStrategyAgent",
        "RLStrategyAgent.__init__",
        "RLStrategyAgent._evaluate_reward",
        "RLStrategyAgent.evaluate"
      ],
      "risk_score": 86.9,
      "sha1": "a4d7ff14f6f4673731c12cf06d62716839d868b9",
      "last_modified": "2025-05-25T01:23:11",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./agents/signal_arbitration_agent.py",
      "imports": [
        "core.logger.logger",
        "numpy"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "logger.info",
        "logger.warning",
        "sorted",
        "weighted_scores.get"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 28,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "SignalArbitrationAgent",
        "SignalArbitrationAgent.__init__",
        "SignalArbitrationAgent.arbitrate"
      ],
      "risk_score": 5.6,
      "sha1": "96ade5f84f5fe691b81b88ed3668609189ec1251",
      "last_modified": "2025-05-22T14:33:41",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./agents/strategy_agent.py",
      "imports": [
        "agents.rl_strategy_agent.RLStrategyAgent",
        "agents.time_series_agent.TimeSeriesAgent",
        "core.config.settings",
        "core.data_provider.load_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.grid_predictor.predict_grid_config",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.predict_entry_exit_config.predict_entry_exit_config",
        "core.predictor.predict_dual_model",
        "core.skiplist.add_to_skiplist",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.db.SessionLocal",
        "db.models.ParamModelPrediction",
        "db.models.StockFeatureDay",
        "pandas",
        "random",
        "sqlalchemy.orm.Session",
        "traceback"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ParamModelPrediction",
        "RLStrategyAgent",
        "SessionLocal",
        "TimeSeriesAgent",
        "action.upper",
        "config.get",
        "dropna",
        "dt.tz_localize",
        "enrich_multi_interval_features",
        "float",
        "get_simulation_date",
        "int",
        "is_valid_for_model",
        "len",
        "load_data",
        "load_model",
        "logger.debug",
        "logger.error",
        "logger.info",
        "logger.warning",
        "pd.DataFrame",
        "pd.DataFrame.drop",
        "pd.to_datetime",
        "predict_dual_model",
        "predict_entry_exit_config",
        "result.get",
        "rl_agent.evaluate",
        "row.get",
        "self._handle_grid_fallback",
        "self.session.commit",
        "self.session.merge",
        "self.session.query",
        "self.session.query.filter",
        "self.session.query.filter.filter",
        "self.session.query.filter.filter.all",
        "self.today.date",
        "self.today.strftime",
        "stock.replace",
        "strategy_config.get",
        "top.get",
        "traceback.format_exc",
        "ts_agent.predict"
      ],
      "transforms_applied": [
        "filter",
        "merge"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 183
        },
        {
          "function_called": "load_data",
          "target_argument": "stock_price_history",
          "line_number": 145
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 48
        }
      ],
      "db_tables_identified": [
        "recommendations_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 220,
      "cyclomatic_complexity": 26,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "is_valid_for_model",
        "StrategyAgent",
        "StrategyAgent.__init__",
        "StrategyAgent.fetch_features",
        "StrategyAgent.evaluate",
        "StrategyAgent._handle_grid_fallback",
        "StrategyAgent.log_summary"
      ],
      "risk_score": 572.0,
      "sha1": "1465f50c3615a45fdc58721b455ac3f9e827d100",
      "last_modified": "2025-05-25T01:19:08",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": [
        "high_complexity (>15)"
      ]
    },
    {
      "file": "./agents/time_series_agent.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.model_io.save_model",
        "datetime.timedelta",
        "numpy",
        "pandas",
        "pmdarima.arima.ARIMA",
        "traceback",
        "warnings"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ARIMA",
        "ARIMA.fit",
        "asfreq",
        "asfreq.ffill",
        "copy",
        "df_sym.set_index",
        "float",
        "getattr",
        "hist.head",
        "hist.squeeze",
        "isinstance",
        "len",
        "load_data",
        "load_model",
        "logger.debug",
        "logger.error",
        "logger.info",
        "logger.warning",
        "model.predict",
        "pd.Series",
        "pd.to_datetime",
        "pd.to_datetime.date",
        "pd.to_datetime.dt.tz_localize",
        "pd.to_numeric",
        "pd.to_numeric.dropna",
        "save_model",
        "self._get_hist",
        "self.train_and_store",
        "sort_values",
        "sum",
        "timedelta",
        "traceback.format_exc",
        "type",
        "warnings.simplefilter"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 34
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:key",
          "line_number": 71
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:key",
          "line_number": 81
        }
      ],
      "db_tables_identified": [
        "price_history_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 92,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "warning_to_log",
        "TimeSeriesAgent",
        "TimeSeriesAgent.__init__",
        "TimeSeriesAgent._get_hist",
        "TimeSeriesAgent.train_and_store",
        "TimeSeriesAgent.predict"
      ],
      "risk_score": 92.0,
      "sha1": "a283e1c2aa20b2c21ad786227b6cfd31fc002cc7",
      "last_modified": "2025-05-14T23:31:27",
      "custom_tags": [
        "module-type:agent"
      ],
      "risk_flags": []
    },
    {
      "file": "./config/paths.py",
      "imports": [
        "pathlib.Path"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Path",
        "Path.resolve"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 13,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.3,
      "sha1": "c079bb1b27d328e1b4f8f1fc5676d19397ebe820",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./config/postgres_config.py",
      "imports": [
        "os"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "int",
        "os.getenv"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 22,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "get_pg_conn_params"
      ],
      "risk_score": 1.1,
      "sha1": "ef07308abec28f1791890560d478f9ed42fd229b",
      "last_modified": "2025-04-26T01:15:51",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./config/sql_tables.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "SQL_TABLE",
        "sql_table"
      ],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 23,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 2.3,
      "sha1": "326bd1033146cb24d07f7e8afdc64f34645525ec",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./config/system_config.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 2,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.2,
      "sha1": "6d288e901a9c9fe5cece92f0c599ee569a6c78f1",
      "last_modified": "2025-04-27T01:50:50",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/backfill_features_from_existing_prices.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "core.precompute_features.compute_features",
        "core.precompute_features.insert_feature_row",
        "core.time_context.get_stock_universe",
        "db.db.SessionLocal",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SessionLocal",
        "backfill",
        "compute_features",
        "df.iterrows",
        "fetch_stock_data",
        "get_stock_universe",
        "hash",
        "insert_feature_row",
        "logger.error",
        "logger.info",
        "logger.warning",
        "pd.to_datetime",
        "row.to_dict",
        "session.close",
        "session.commit",
        "session.rollback",
        "settings.interval_feature_table_map.get"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "interval_feature_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 51,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "backfill"
      ],
      "risk_score": 45.9,
      "sha1": "5d5d2638f473088480401b58e66f894a6e9f2398",
      "last_modified": "2025-05-25T14:21:58",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/backtest_bt.py",
      "imports": [
        "backtesting.Backtest",
        "backtesting.Strategy",
        "backtesting.lib.crossover",
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.strategy_config.ExitRule",
        "core.strategy_config.StrategyConfig",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Backtest",
        "ExitRule",
        "StrategyConfig",
        "bt.run",
        "crossover",
        "delta.clip",
        "df.rename",
        "fetch_stock_data",
        "gain.ewm",
        "gain.ewm.mean",
        "int",
        "loss.ewm",
        "loss.ewm.mean",
        "pd.Series",
        "pd.Series.rolling",
        "pd.Series.rolling.mean",
        "pd.Series.rolling.mean.to_numpy",
        "print",
        "rsi.to_numpy",
        "run_backtest_config",
        "self.I",
        "self.buy",
        "self.position.close",
        "series.diff",
        "stats.get"
      ],
      "transforms_applied": [
        "rolling"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 1,
      "loc": 117,
      "cyclomatic_complexity": 13,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "ta_sma",
        "ta_rsi",
        "SMA_RSI_Exit",
        "run_backtest_config",
        "SMA_RSI_Exit.init",
        "SMA_RSI_Exit.next"
      ],
      "risk_score": 152.1,
      "sha1": "c825c70bbde3bddf9af83e3f17712ac5493b4d49",
      "last_modified": "2025-05-19T12:35:06",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/config.py",
      "imports": [
        "pathlib.Path",
        "pydantic.BaseModel",
        "pydantic.Field",
        "pydantic.SecretStr",
        "pydantic_settings.BaseSettings",
        "typing.ClassVar",
        "typing.Dict",
        "typing.List",
        "typing.Optional",
        "typing.Tuple"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Field",
        "Path",
        "RetrainConfig",
        "SecretStr",
        "Settings"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "encoding_table",
        "feature_table",
        "filter_model_predictions_table",
        "fundamentals_table",
        "grid_params_table",
        "instruments_table",
        "interval_feature_table",
        "meta_metadata_table",
        "meta_training_table",
        "ml_selected_stocks_table",
        "model_store_table",
        "open_positions_table",
        "param_model_predictions_table",
        "price_history_table",
        "price_model_predictions_table",
        "recommendations_table",
        "selected_table",
        "skiplist_table",
        "trades_table",
        "training_data_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 3,
      "loc": 252,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_feature_columns",
        "RetrainConfig",
        "Settings",
        "Settings.Config"
      ],
      "risk_score": 50.4,
      "sha1": "b9c86a6262eda6767e0b6aa9315ce1d517d0c0c5",
      "last_modified": "2025-05-25T19:56:14",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/data_cleaner.py",
      "imports": [
        "core.logger.logger",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ValueError",
        "astype",
        "df.columns.duplicated",
        "df.columns.duplicated.any",
        "df.drop_duplicates",
        "df.dropna",
        "df.rename",
        "dt.strftime",
        "len",
        "logger.success",
        "logger.warning",
        "pd.to_datetime",
        "pd.to_numeric",
        "set"
      ],
      "transforms_applied": [
        "drop_duplicates"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 41,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "normalize_columns",
        "sanity_check_features"
      ],
      "risk_score": 24.6,
      "sha1": "f044016fd801c8832d5c50eba859e25ba947d12c",
      "last_modified": "2025-05-09T16:14:37",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/data_initializer.py",
      "imports": [
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.postgres_manager.read_table",
        "integrations.zerodha_fetcher.fetch_historical_data",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "env.split",
        "fetch_historical_data",
        "fetch_stock_data",
        "insert_with_conflict_handling",
        "len",
        "logger.error",
        "logger.info",
        "logger.warning",
        "os.getenv",
        "read_table",
        "s.strip",
        "unique"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "read_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 44,
      "cyclomatic_complexity": 13,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 28.6,
      "sha1": "38fd6c48dfb9d90c95f1a28328fd194b2cc5dfe5",
      "last_modified": "2025-05-03T14:05:58",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/data_provider.py",
      "imports": [
        "core.config.settings",
        "core.logger.logger",
        "datetime.datetime",
        "datetime.timedelta",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.db.SessionLocal",
        "db.db.engine",
        "db.models.Base",
        "db.models.Instrument",
        "db.models.MLSelectedStock",
        "db.models.OpenPosition",
        "db.models.PaperTrade",
        "db.models.Recommendation",
        "db.models.SkiplistStock",
        "db.models.StockEncoding",
        "db.models.StockFeatureDay",
        "db.models.StockFundamental",
        "db.models.StockPriceHistory",
        "integrations.zerodha_fetcher.fetch_historical_data",
        "pandas",
        "pytz.timezone",
        "sqlalchemy.inspect",
        "typing.Any",
        "typing.List",
        "typing.Optional",
        "utils.time_utils.to_naive_utc"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Model.date.desc",
        "ORM_MODEL_MAP.get",
        "SessionLocal",
        "SkiplistStock",
        "c.startswith",
        "create",
        "datetime.now",
        "df.drop",
        "df.rename",
        "df.set_index",
        "df.set_index.sort_index",
        "end.astimezone",
        "end.date",
        "fetch_historical_data",
        "fillna",
        "float",
        "fresh.set_index",
        "fresh.set_index.sort_index",
        "insert_with_conflict_handling",
        "inspect",
        "inspector.get_table_names",
        "interval.replace",
        "isinstance",
        "ist.localize",
        "logger.debug",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "pd.to_datetime",
        "save_data",
        "session.close",
        "session.commit",
        "session.execute",
        "session.merge",
        "session.query",
        "session.query.all",
        "session.query.filter",
        "session.query.filter.filter",
        "session.query.filter.filter.delete",
        "session.query.filter.filter.filter",
        "session.query.filter.filter.filter.order_by",
        "session.query.filter.filter.filter.order_by.all",
        "session.query.filter.first",
        "session.query.filter.order_by",
        "session.query.filter.order_by.first",
        "settings.date_columns.get",
        "settings.table_map.get",
        "start.astimezone",
        "table_name.startswith",
        "timedelta",
        "timezone",
        "to_naive_utc"
      ],
      "transforms_applied": [
        "filter",
        "merge"
      ],
      "modifies_stream": true,
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 227
        },
        {
          "function_called": "save_data",
          "target_argument": "var:fresh",
          "line_number": 102
        }
      ],
      "db_tables_identified": [
        "base_table",
        "encoding_table",
        "ensure_price_table",
        "feature_table",
        "fundamentals_table",
        "get_table",
        "instruments_table",
        "ml_selected_stocks_table",
        "open_positions_table",
        "pg_table",
        "price_history_table",
        "recommendations_table",
        "skiplist_table",
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 8,
      "class_count": 0,
      "loc": 228,
      "cyclomatic_complexity": 33,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "fetch_stock_data",
        "save_data",
        "load_data",
        "get_last_close",
        "delete_cached_features",
        "list_partitions",
        "ensure_price_table",
        "cache_price"
      ],
      "risk_score": 752.4,
      "sha1": "120042e2457480bacb5377a1472a5171fd21b569",
      "last_modified": "2025-05-25T01:10:08",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/feature_enricher.py",
      "imports": [
        "core.config.settings",
        "core.logger.logger",
        "datetime.datetime",
        "db.db.SessionLocal",
        "pandas",
        "sqlalchemy.sql.text",
        "utils.time_utils.to_naive_utc"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SessionLocal",
        "any",
        "df.get",
        "dict",
        "logger.error",
        "logger.info",
        "logger.warning",
        "pd.DataFrame",
        "pd.isnull",
        "pd.isnull.any",
        "pd.to_datetime",
        "pd.to_datetime.date",
        "session.close",
        "session.execute",
        "session.execute.fetchall",
        "settings.interval_feature_table_map.get",
        "text",
        "to_naive_utc"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "interval_feature_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 52,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "enrich_features"
      ],
      "risk_score": 36.4,
      "sha1": "ec13f83e93b97cc4465df51bf129db017d8eb3e9",
      "last_modified": "2025-05-25T01:15:25",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/feature_enricher_multi.py",
      "imports": [
        "core.feature_enricher.enrich_features",
        "datetime.datetime",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.add_suffix",
        "df.rename",
        "dfs.append",
        "enrich_features",
        "pd.DataFrame",
        "pd.merge"
      ],
      "transforms_applied": [
        "merge"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 22,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "enrich_multi_interval_features"
      ],
      "risk_score": 11.0,
      "sha1": "75c2b302759ab614ceccc500127f7a13a4970686",
      "last_modified": "2025-05-21T23:47:19",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/grid_predictor.py",
      "imports": [
        "backtesting.backtesting",
        "core.backtest_bt.run_backtest_config",
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "core.strategy_config.ExitRule",
        "core.strategy_config.StrategyConfig",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.postgres_manager.run_query",
        "json",
        "multiprocessing",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ExitRule",
        "StrategyConfig",
        "cfg.dict",
        "cfg.get",
        "datetime.now",
        "df.sort_values",
        "df.sort_values.head",
        "df.to_dict",
        "fetch_stock_data",
        "float",
        "get_simulation_date",
        "int",
        "json.dumps",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "persist_grid_recommendations",
        "predict_grid_config",
        "results.append",
        "run_backtest_config",
        "run_query",
        "sorted"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 129,
      "cyclomatic_complexity": 18,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "predict_grid_config",
        "persist_grid_recommendations"
      ],
      "risk_score": 232.2,
      "sha1": "0e10066f2e0e5d5d32d9c5062f6286f0df2a3071",
      "last_modified": "2025-05-19T12:36:25",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/logger.py",
      "imports": [
        "core.config.settings",
        "datetime.datetime",
        "logging",
        "os",
        "sys"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SafeFormatter",
        "console_handler.setFormatter",
        "console_handler.setLevel",
        "datetime.now",
        "datetime.now.strftime",
        "file_handler.setFormatter",
        "file_handler.setLevel",
        "getattr",
        "log_dir.mkdir",
        "logger.addHandler",
        "logger.error",
        "logger.info",
        "logger.setLevel",
        "logger.warning",
        "logging.FileHandler",
        "logging.Formatter",
        "logging.StreamHandler",
        "logging.getLogger",
        "record.msg.encode",
        "record.msg.encode.decode",
        "settings.console_log_level.upper",
        "settings.file_log_level.upper",
        "settings.log_level.upper",
        "super",
        "super.format"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 1,
      "loc": 53,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "SafeFormatter",
        "info",
        "success",
        "warning",
        "error",
        "start",
        "SafeFormatter.format"
      ],
      "risk_score": 10.6,
      "sha1": "70dec32f23b1b96babe50a6ba77ec261aebc9669",
      "last_modified": "2025-05-25T23:44:12",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/model_io.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "datetime.datetime",
        "db.conflict_utils.insert_with_conflict_handling",
        "db.postgres_manager.run_query",
        "pandas",
        "pickle"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "FileNotFoundError",
        "ValueError",
        "datetime.now",
        "insert_with_conflict_handling",
        "load_data",
        "load_latest_model",
        "load_model",
        "logger.info",
        "logger.success",
        "matches.sort_values",
        "name.endswith",
        "name.replace",
        "pd.DataFrame",
        "pickle.dumps",
        "pickle.loads",
        "run_query",
        "str.startswith"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 70
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:latest_name",
          "line_number": 79
        }
      ],
      "db_tables_identified": [
        "model_store_table"
      ],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 79,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 40.0,
      "missing_docstrings": [
        "module-level",
        "load_model",
        "get_model_metadata"
      ],
      "risk_score": 23.7,
      "sha1": "68af382c643666899155a8f0b55f7031ff068343",
      "last_modified": "2025-05-23T04:18:53",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/precompute_features.py",
      "imports": [
        "argparse",
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "core.time_context.get_stock_universe",
        "datetime.datetime",
        "datetime.timedelta",
        "db.db.SessionLocal",
        "pandas",
        "sqlalchemy.sql.text",
        "ta",
        "utils.time_utils.to_naive_utc"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SessionLocal",
        "argparse.ArgumentParser",
        "bb.bollinger_wband",
        "compute_features",
        "cumsum",
        "df.copy",
        "df.dropna",
        "df.iterrows",
        "enrich_and_store",
        "fetch_stock_data",
        "get_stock_universe",
        "hash",
        "insert_feature_row",
        "logger.error",
        "logger.info",
        "logger.warning",
        "macd.macd",
        "macd.macd_diff",
        "parser.add_argument",
        "parser.parse_args",
        "pct_change",
        "pct_change.rolling",
        "pct_change.rolling.std",
        "pd.to_datetime",
        "rolling",
        "rolling.mean",
        "row.to_dict",
        "session.close",
        "session.commit",
        "session.execute",
        "session.rollback",
        "settings.interval_feature_table_map.get",
        "ta.momentum.RSIIndicator",
        "ta.momentum.RSIIndicator.rsi",
        "ta.trend.MACD",
        "ta.volatility.AverageTrueRange",
        "ta.volatility.AverageTrueRange.average_true_range",
        "ta.volatility.BollingerBands",
        "text"
      ],
      "transforms_applied": [
        "rolling"
      ],
      "modifies_stream": true,
      "db_tables_identified": [
        "interval_feature_table"
      ],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 112,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "compute_features",
        "insert_feature_row",
        "enrich_and_store"
      ],
      "risk_score": 112.0,
      "sha1": "aef2a29917ebc7584fea936e7eecb06215bffeda",
      "last_modified": "2025-05-25T14:21:38",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/predictor.py",
      "imports": [
        "agents.signal_arbitration_agent.SignalArbitrationAgent",
        "core.config.settings",
        "core.model_io.load_model",
        "core.time_context.get_simulation_date",
        "db.conflict_utils.insert_with_conflict_handling",
        "models.ml_dual_model_prediction_sql.predict_dual_model",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "X_clf.to_dict",
        "clf_model.predict",
        "feature_df.reindex",
        "float",
        "get_simulation_date",
        "insert_with_conflict_handling",
        "int",
        "load_model",
        "pd.DataFrame",
        "reg_model.predict"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 24
        },
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 25
        }
      ],
      "db_tables_identified": [
        "filter_model_predictions_table",
        "param_model_predictions_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 54,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 5.4,
      "sha1": "7bc6ee8e1349f7b0c6feaccf6feeeec1a57ff58e",
      "last_modified": "2025-05-18T21:02:18",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/predict_entry_exit_config.py",
      "imports": [
        "core.logger.logger",
        "core.model_io.load_model",
        "numpy",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "clf.predict",
        "fillna",
        "fillna.replace",
        "float",
        "int",
        "label_enc.inverse_transform",
        "load_model",
        "logger.error",
        "logger.warning",
        "reg.predict",
        "round"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "entry_exit_model",
          "line_number": 9
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 39,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "predict_entry_exit_config"
      ],
      "risk_score": 11.7,
      "sha1": "a9ab1f0e023b604346b4889bdc53133c84f54407",
      "last_modified": "2025-05-22T14:06:13",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/predict_param_model.py",
      "imports": [
        "core.config.settings",
        "core.logger.logger",
        "core.model_io.load_model",
        "numpy",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "copy",
        "copy.fillna",
        "copy.fillna.replace",
        "enriched.get",
        "float",
        "int",
        "isinstance",
        "le.inverse_transform",
        "load_model",
        "logger.error",
        "logger.warning",
        "model.predict",
        "np.std",
        "round",
        "str",
        "str.lower"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_name",
          "line_number": 21
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 50,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "predict_param_config"
      ],
      "risk_score": 35.0,
      "sha1": "26cf1f9e68d2b3b6c6c595c64fd63068df686bdf",
      "last_modified": "2025-05-24T14:10:37",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/price_service.py",
      "imports": [
        "core.data_provider.fetch_stock_data"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "fetch_stock_data",
        "reset_index"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 7,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_prices"
      ],
      "risk_score": 1.4,
      "sha1": "8c0c95ff4b713dbc5c7d67a13298da75a54d9cea",
      "last_modified": "2025-05-20T23:08:23",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/rl_predictor.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.data_provider.load_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.load_latest_model",
        "core.model_io.load_model",
        "core.time_context.get_simulation_date",
        "numpy",
        "pandas",
        "rl.envs.trading_env.TradingEnv",
        "stable_baselines3.PPO",
        "stable_baselines3.common.vec_env.DummyVecEnv"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DummyVecEnv",
        "RuntimeError",
        "TradingEnv",
        "df.dropna",
        "df.select_dtypes",
        "df.select_dtypes.infer_objects",
        "df.set_index",
        "df_feats.interpolate",
        "df_feats.interpolate.fillna",
        "df_feats.interpolate.fillna.replace",
        "df_feats.reset_index",
        "enrich_multi_interval_features",
        "env.reset",
        "fetch_stock_data",
        "get_simulation_date",
        "int",
        "len",
        "load_latest_model",
        "load_model",
        "load_policy",
        "load_rl_frame",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "model_name.endswith",
        "model_name.replace",
        "np.all",
        "np.isfinite",
        "pd.DataFrame",
        "pd.concat",
        "policy.predict",
        "price.merge",
        "price.merge.sort_values",
        "reset_index"
      ],
      "transforms_applied": [
        "concat",
        "merge",
        "sort_values"
      ],
      "modifies_stream": true,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_name",
          "line_number": 21
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 109,
      "cyclomatic_complexity": 18,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_policy",
        "load_rl_frame",
        "predict_action",
        "predict_with_fallback"
      ],
      "risk_score": 196.2,
      "sha1": "305ed369bbf3fc3a0bc90b7834dec838515c2026",
      "last_modified": "2025-05-24T14:34:37",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/skiplist.py",
      "imports": [
        "core.config.settings",
        "core.logger.logger",
        "db.postgres_manager.run_query"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "bool",
        "getattr",
        "logger.info",
        "logger.warning",
        "run_query"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 43,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "is_in_skiplist",
        "add_to_skiplist",
        "remove_from_skiplist"
      ],
      "risk_score": 25.8,
      "sha1": "20b07cabdef7f74ed671a88b4b99ab3e2e05aff6",
      "last_modified": "2025-05-15T01:21:17",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/strategy_config.py",
      "imports": [
        "pydantic.BaseModel",
        "typing.Literal",
        "typing.Optional"
      ],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 2,
      "loc": 16,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "ExitRule",
        "StrategyConfig"
      ],
      "risk_score": 1.6,
      "sha1": "3ea8e9bdf97f0e5672454c6877d2e1e8557ebb73",
      "last_modified": "2025-05-19T12:13:31",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/system_logger.py",
      "imports": [
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.postgres_manager.insert_dataframe",
        "db.postgres_manager.run_query",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "datetime.now",
        "get_simulation_date",
        "insert_dataframe",
        "logger.debug",
        "logger.warning",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.date"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 29,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "log_event"
      ],
      "risk_score": 5.8,
      "sha1": "95b199c82e4a4a0f428356ce4aefc39b921a3af4",
      "last_modified": "2025-05-26T01:29:32",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/system_state.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "json",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "build_system_state",
        "df.date.max",
        "df.date.max.date",
        "get_execution_state",
        "get_feature_state",
        "get_market_data_state",
        "get_model_state",
        "get_planner_state",
        "get_simulation_date",
        "json.dumps",
        "len",
        "list",
        "load_data",
        "load_model",
        "pd.Timestamp",
        "pd.to_datetime",
        "pd.to_datetime.date",
        "pd.to_datetime.max",
        "pd.to_datetime.max.date",
        "print",
        "settings.interval_feature_table_map.get",
        "str",
        "symbol.unique",
        "symbol.unique.tolist",
        "type"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 14
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 52
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 65
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 66
        },
        {
          "function_called": "load_data",
          "target_argument": "var:table",
          "line_number": 30
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:m",
          "line_number": 44
        }
      ],
      "db_tables_identified": [
        "interval_feature_table",
        "open_positions_table",
        "price_history_table",
        "recommendations_table",
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 6,
      "class_count": 0,
      "loc": 92,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_market_data_state",
        "get_feature_state",
        "get_model_state",
        "get_planner_state",
        "get_execution_state",
        "build_system_state"
      ],
      "risk_score": 82.8,
      "sha1": "974a9bc1153a665cfa9b20ae3159f2f596022721",
      "last_modified": "2025-05-22T20:44:01",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./core/time_context.py",
      "imports": [
        "datetime.datetime",
        "datetime.time",
        "os",
        "pandas",
        "pandas.tseries.offsets.BDay",
        "pytz"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "BDay",
        "IST.localize",
        "date",
        "datetime.combine",
        "datetime.now",
        "datetime.now.date",
        "os.environ.get",
        "os.environ.pop",
        "pd.Timestamp",
        "pd.to_datetime",
        "pd.to_datetime.date",
        "print",
        "pytz.timezone",
        "str",
        "time"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 30,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "module-level",
        "set_simulation_date",
        "clear_simulation_date"
      ],
      "risk_score": 6.75,
      "sha1": "ce0408c6f30ccaf182c5ebc8923a094a30cd552b",
      "last_modified": "2025-05-25T02:03:14",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/token_manager.py",
      "imports": [
        "json",
        "os",
        "pathlib.Path"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "FileNotFoundError",
        "Path",
        "TOKEN_PATH.exists",
        "TOKEN_PATH.parent.mkdir",
        "json.dump",
        "json.load",
        "load_access_token",
        "open"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 21,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "save_access_token",
        "load_access_token",
        "get_saved_access_token"
      ],
      "risk_score": 8.4,
      "sha1": "394ddec5442be6d8ae9819a85c238f11d1aff110",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 0,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.0,
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "last_modified": "2025-04-19T00:52:39",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/validation/data_checks.py",
      "imports": [
        "numpy",
        "pandas",
        "scipy.stats.zscore"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "counts.max",
        "df.isna",
        "df.isna.mean",
        "df.select_dtypes",
        "dropna",
        "np.abs",
        "pd.DataFrame",
        "quantile",
        "to_dict",
        "value_counts",
        "zscore"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 44,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "check_missing",
        "class_balance",
        "detect_outliers"
      ],
      "risk_score": 16.5,
      "sha1": "cae6937854876b29bc49390d23568472efdb0c91",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./core/validation/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 6,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 100.0,
      "missing_docstrings": [],
      "risk_score": 0.03,
      "sha1": "09f76650fc786c42c683ce558cfe944cd7665734",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./dashboards/system_dashboard.py",
      "imports": [
        "datetime.datetime",
        "datetime.timedelta",
        "db.postgres_manager.run_query",
        "pandas",
        "reports.weekly_snapshot.compute_snapshot",
        "streamlit"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "compute_snapshot",
        "datetime.now",
        "datetime.now.date",
        "isin",
        "len",
        "list",
        "load_system_log",
        "load_trade_summary",
        "run_query",
        "st.dataframe",
        "st.date_input",
        "st.json",
        "st.multiselect",
        "st.set_page_config",
        "st.subheader",
        "st.success",
        "st.tabs",
        "st.title",
        "st.warning",
        "timedelta",
        "unique"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 75,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_system_log",
        "load_trade_summary"
      ],
      "risk_score": 60.0,
      "sha1": "a4265f078005fcef39034aad295163993be9f8e7",
      "last_modified": "2025-05-26T01:42:32",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./data_pipeline/zerodha_to_postgres.py",
      "imports": [
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "datetime.datetime",
        "datetime.timedelta",
        "db.postgres_manager.run_query",
        "integrations.zerodha_fetcher.fetch_historical_data",
        "os",
        "pandas",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ValueError",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "enumerate",
        "fetch_and_save_stock",
        "fetch_historical_data",
        "len",
        "load_data",
        "load_stock_list",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "main",
        "pd.DataFrame",
        "run_query",
        "save_data",
        "sorted",
        "time.sleep"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:INSTRUMENTS_TABLE",
          "line_number": 22
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 64
        }
      ],
      "db_tables_identified": [
        "INSTRUMENTS_TABLE",
        "PRICE_HISTORY_TABLE",
        "SKIPLIST_TABLE"
      ],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 84,
      "cyclomatic_complexity": 11,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_stock_list",
        "fetch_and_save_stock",
        "main"
      ],
      "risk_score": 92.4,
      "sha1": "ba97536b1105c0e7ccdd83e3070a163d9c653062",
      "last_modified": "2025-05-20T16:34:16",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./db/conflict_utils.py",
      "imports": [
        "db.db.engine",
        "db.models.Base",
        "pandas",
        "sqlalchemy.dialects.postgresql.insert"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Base.metadata.reflect",
        "Base.metadata.tables.get",
        "CONFLICT_HANDLERS.get",
        "ValueError",
        "apply",
        "astype",
        "bool",
        "conn.execute",
        "df.drop_duplicates",
        "df.select_dtypes",
        "df.to_dict",
        "engine.begin",
        "insert",
        "insert.values",
        "int",
        "pd.notnull",
        "stmt.on_conflict_do_nothing",
        "stmt.on_conflict_do_update"
      ],
      "transforms_applied": [
        "apply",
        "drop_duplicates"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 81,
      "cyclomatic_complexity": 13,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 52.65,
      "sha1": "55bb3cad454cde5a7237ea4d94b4ea45e8ead764",
      "last_modified": "2025-05-21T14:46:25",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/csv_to_sql.py",
      "imports": [
        "db.db_router.insert_dataframe",
        "pandas",
        "pathlib.Path",
        "sys"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Path",
        "Path.resolve",
        "csv_map.items",
        "csv_to_sql",
        "file.exists",
        "insert_dataframe",
        "pd.read_csv",
        "print",
        "str",
        "sys.path.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:path",
          "line_number": 26
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 32,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "csv_to_sql"
      ],
      "risk_score": 16.0,
      "sha1": "39ed2cfa14969d52ed7a88b94dbeceff8bc137f2",
      "last_modified": "2025-04-26T01:04:13",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./db/db.py",
      "imports": [
        "config.postgres_config.get_pg_conn_params",
        "core.config.settings",
        "sqlalchemy.create_engine",
        "sqlalchemy.orm.sessionmaker"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SessionLocal",
        "create_engine",
        "get_pg_conn_params",
        "sessionmaker"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 25,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.25,
      "sha1": "6c01f67191e1556dc79e10c089766d5c9755fb23",
      "last_modified": "2025-05-05T05:45:25",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/db_manager.py",
      "imports": [
        "config.paths.PATHS",
        "core.logger.logger",
        "pandas",
        "sqlite3",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "conn.close",
        "conn.commit",
        "conn.cursor",
        "conn.execute",
        "conn.execute.fetchone",
        "cursor.execute",
        "cursor.fetchall",
        "df.drop_duplicates",
        "df.to_sql",
        "get_connection",
        "len",
        "logger.debug",
        "logger.error",
        "logger.info",
        "logger.warning",
        "mode.lower",
        "pd.read_sql",
        "print",
        "range",
        "sqlite3.connect",
        "str",
        "str.lower",
        "time.sleep"
      ],
      "transforms_applied": [
        "drop_duplicates"
      ],
      "modifies_stream": true,
      "db_tables_identified": [
        "list_table",
        "read_table"
      ],
      "features_identified": [],
      "function_count": 7,
      "class_count": 0,
      "loc": 130,
      "cyclomatic_complexity": 20,
      "docstring_coverage": 12.5,
      "missing_docstrings": [
        "module-level",
        "insert_dataframe",
        "read_table",
        "run_query",
        "list_tables",
        "execute_raw_sql",
        "enable_wal_mode"
      ],
      "risk_score": 227.5,
      "sha1": "d2b60a2e4dc46d5e6c4b84b3b2a1c5fc6b5dc68a",
      "last_modified": "2025-04-23T08:50:05",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/init_postgres.py",
      "imports": [
        "db.postgres_manager.execute_raw_sql",
        "db.postgres_manager.run_query"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "execute_raw_sql",
        "init_postgres",
        "print",
        "run_query",
        "table_exists",
        "tables_to_create.items"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 185,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "table_exists",
        "init_postgres"
      ],
      "risk_score": 74.0,
      "sha1": "3caeb82e64d23069115d908489399edc7c5e2a59",
      "last_modified": "2025-05-16T13:40:38",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/models.py",
      "imports": [
        "core.config.settings",
        "datetime.date",
        "datetime.datetime",
        "sqlalchemy.BigInteger",
        "sqlalchemy.Boolean",
        "sqlalchemy.Column",
        "sqlalchemy.Date",
        "sqlalchemy.DateTime",
        "sqlalchemy.Float",
        "sqlalchemy.Integer",
        "sqlalchemy.String",
        "sqlalchemy.orm.declarative_base"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Column",
        "String",
        "declarative_base"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "__table",
        "ml_selected_stocks_table"
      ],
      "features_identified": [],
      "function_count": 0,
      "class_count": 16,
      "loc": 229,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "Instrument",
        "SkiplistStock",
        "StockPriceHistory",
        "StockFeatureDay",
        "StockFeature1m",
        "StockFeature15m",
        "StockFeature60m",
        "StockFundamental",
        "StockEncoding",
        "Recommendation",
        "OpenPosition",
        "PaperTrade",
        "FilterModelPrediction",
        "ParamModelPrediction",
        "PriceModelPrediction",
        "MLSelectedStock",
        "MLSelectedStock.__repr__"
      ],
      "risk_score": 22.9,
      "sha1": "310703ac94f19f1480049f3b16a554653259e609",
      "last_modified": "2025-05-25T20:05:51",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/postgres_manager.py",
      "imports": [
        "config.postgres_config.get_pg_conn_params",
        "db.db.SessionLocal",
        "db.models.Instrument",
        "pandas",
        "sqlalchemy.create_engine",
        "sqlalchemy.text"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "SessionLocal",
        "conn.execute",
        "create_engine",
        "df.to_sql",
        "engine.begin",
        "enumerate",
        "get_engine",
        "get_pg_conn_params",
        "isinstance",
        "len",
        "pd.read_sql",
        "print",
        "query.replace",
        "range",
        "result.fetchall",
        "session.close",
        "session.query",
        "session.query.all",
        "text"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "read_table"
      ],
      "features_identified": [],
      "function_count": 6,
      "class_count": 0,
      "loc": 69,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 28.57,
      "missing_docstrings": [
        "get_engine",
        "read_table",
        "run_query",
        "execute_raw_sql",
        "get_all_symbols"
      ],
      "risk_score": 39.43,
      "sha1": "5580f3a505c82886d4376ab667da94493b593f15",
      "last_modified": "2025-05-20T13:54:13",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/replay_buffer_sql.py",
      "imports": [
        "datetime.datetime",
        "db.postgres_manager.run_query",
        "json",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "conditions.append",
        "datetime.now",
        "episode.get",
        "join",
        "json.dumps",
        "params.append",
        "run_query"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 59,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "insert_replay_episode",
        "load_replay_episodes",
        "clear_old_episodes",
        "count_by_stock"
      ],
      "risk_score": 23.6,
      "sha1": "f1e9eb4bb4b30f512f17fe2c0f0aa639cf60cd09",
      "last_modified": "2025-05-23T03:42:50",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./db/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 0,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.0,
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "last_modified": "2025-05-04T20:05:54",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/clear_all_sql_tables.py",
      "imports": [
        "core.logger.logger",
        "db.db_router.execute_raw_sql"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "clear_all_tables",
        "execute_raw_sql",
        "logger.info",
        "logger.success",
        "logger.warning"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "clear_all_sql_table",
        "clear_all_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 25,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "clear_all_tables"
      ],
      "risk_score": 10.0,
      "sha1": "02ad31da507862fab730bc12a771b44fdcdd3a19",
      "last_modified": "2025-04-26T01:04:45",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/diagnose_storage.py",
      "imports": [
        "core.data_provider.load_data",
        "os",
        "pathlib.Path",
        "sqlite3"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DB_FILE.exists",
        "Path",
        "conn.close",
        "conn.execute",
        "cur.fetchone",
        "load_data.items",
        "loc_str.endswith",
        "loc_str.split",
        "os.path.exists",
        "print",
        "sqlite3.connect",
        "str",
        "table_exists"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 30,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "table_exists"
      ],
      "risk_score": 12.0,
      "sha1": "9d37ae03881c3d17fa12b350139e19e84ad6868b",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/evaluate_model_curves.py",
      "imports": [
        "core.data_provider.load_data",
        "core.logger.logger",
        "matplotlib.pyplot",
        "numpy",
        "pandas",
        "sklearn.metrics.mean_absolute_error",
        "sklearn.metrics.mean_squared_error"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "date.strftime",
        "evaluate_model",
        "len",
        "load_actual_prices",
        "load_data",
        "load_predictions",
        "logger.error",
        "logger.info",
        "logger.warning",
        "mean",
        "mean_absolute_error",
        "mean_squared_error",
        "np.sign",
        "np.sqrt",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.dt.tz_localize",
        "plt.axhline",
        "plt.figure",
        "plt.grid",
        "plt.legend",
        "plt.plot",
        "plt.show",
        "plt.tight_layout",
        "plt.title",
        "plt.xticks",
        "pred_df.iterrows",
        "results.append",
        "sort_values"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:CURVE_TABLE",
          "line_number": 17
        },
        {
          "function_called": "load_data",
          "target_argument": "var:PRICE_TABLE",
          "line_number": 26
        }
      ],
      "db_tables_identified": [
        "CURVE_TABLE",
        "PRICE_TABLE"
      ],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 119,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_predictions",
        "load_actual_prices",
        "evaluate_model"
      ],
      "risk_score": 107.1,
      "sha1": "d0323360a97d9a9a429beba11e46692addaa9e9e",
      "last_modified": "2025-04-28T01:11:14",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./diagnosis/fix_model_path_usage.py",
      "imports": [
        "pathlib.Path",
        "re"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Path",
        "ROOT.rglob",
        "filepath.read_text",
        "filepath.write_text",
        "fix_file",
        "join",
        "main",
        "path.is_file",
        "pattern.sub",
        "print",
        "re.compile"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 43,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "fix_file",
        "main"
      ],
      "risk_score": 14.33,
      "sha1": "290b19c5416f47f8dccabaaf5bbdbb3c46fe5e23",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/migrate_paths_to_sql.py",
      "imports": [
        "argparse",
        "os",
        "pathlib.Path",
        "re"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Path",
        "ROOT_DIR.rglob",
        "argparse.ArgumentParser",
        "file.is_file",
        "filepath.read_text",
        "filepath.write_text",
        "m.group",
        "parser.add_argument",
        "parser.parse_args",
        "print",
        "re.compile",
        "read_csv_pattern.sub",
        "run_all",
        "to_csv_pattern.sub",
        "transform_code",
        "update_file"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 66,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "transform_code",
        "update_file",
        "run_all"
      ],
      "risk_score": 29.7,
      "sha1": "300487016f8631c1cf924c38c777a20055130396",
      "last_modified": "2025-05-02T02:56:14",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/migrate_to_sql.py",
      "imports": [
        "config.paths.PATHS",
        "db.db_router.DB_PATH",
        "db.db_router.insert_dataframe",
        "os",
        "pandas",
        "pickle",
        "sqlite3"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "PATHS.items",
        "conn.close",
        "conn.commit",
        "conn.cursor",
        "cur.execute",
        "ensure_blob_json_tables",
        "f.read",
        "insert_dataframe",
        "len",
        "loc_str.lower",
        "loc_str.lower.endswith",
        "migrate_csv",
        "migrate_json",
        "migrate_pkl",
        "migrate_to_sql",
        "open",
        "os.path.exists",
        "pd.read_csv",
        "print",
        "sqlite3.Binary",
        "sqlite3.connect",
        "str"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:loc_str",
          "line_number": 45
        }
      ],
      "db_tables_identified": [
        "JSON_TABLE",
        "MODEL_TABLE",
        "ensure_blob_json_table"
      ],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 115,
      "cyclomatic_complexity": 14,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "migrate_csv",
        "migrate_pkl",
        "migrate_json",
        "migrate_to_sql"
      ],
      "risk_score": 107.34,
      "sha1": "7a5ff31eaa944dc63027d889d7bac0185b624558",
      "last_modified": "2025-04-26T00:55:34",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./diagnosis/seed_training_data.py",
      "imports": [
        "core.logger.logger",
        "db.db_router.insert_dataframe",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "insert_dataframe",
        "len",
        "logger.success",
        "pd.DataFrame",
        "seed"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 21,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "seed"
      ],
      "risk_score": 4.2,
      "sha1": "6634c45210f2e2a2db26268b633de9657c87faa2",
      "last_modified": "2025-04-26T00:55:37",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/simulate_execution.py",
      "imports": [
        "agents.execution_agent_sql.ExecutionAgentSQL",
        "core.logger.logger",
        "core.time_context.clear_simulation_date",
        "core.time_context.set_simulation_date",
        "datetime.datetime",
        "datetime.timedelta",
        "predictive_trader.curve_predictor.generate_curves_for_list",
        "predictive_trader.curve_signal_generator.generate_signals_from_curves"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ExecutionAgentSQL",
        "ExecutionAgentSQL.run",
        "clear_simulation_date",
        "date.strftime",
        "date.weekday",
        "datetime.strptime",
        "enumerate",
        "generate_curves_for_list",
        "generate_signals_from_curves",
        "generate_trading_days",
        "len",
        "logger.info",
        "logger.success",
        "print",
        "set_simulation_date",
        "simulate_trading_days",
        "timedelta",
        "trading_days.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 46,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_trading_days",
        "simulate_trading_days"
      ],
      "risk_score": 23.0,
      "sha1": "e7766bacb8873a7a9701f03d603b4736a417fd51",
      "last_modified": "2025-04-27T20:20:21",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/simulate_history.py",
      "imports": [
        "agents.intraday_planner_agent.IntradayPlannerAgent",
        "agents.memory_agent.MemoryAgent",
        "agents.planner_agent_sql.PlannerAgentSQL",
        "argparse",
        "core.time_context.set_simulation_date",
        "datetime.datetime",
        "models.meta_strategy_selector.train_meta_model",
        "models.train_dual_model_sql.train_dual_model",
        "models.train_exit_model.train_exit_model",
        "models.train_param_model.train_param_model",
        "models.train_stock_filter_model.train_stock_filter_model",
        "pandas",
        "subprocess"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "IntradayPlannerAgent",
        "IntradayPlannerAgent.run",
        "MemoryAgent",
        "MemoryAgent.update",
        "PlannerAgentSQL",
        "PlannerAgentSQL.run",
        "argparse.ArgumentParser",
        "date.date",
        "date.weekday",
        "daterange",
        "parser.add_argument",
        "parser.parse_args",
        "pd.Timedelta",
        "pd.to_datetime",
        "print",
        "set_simulation_date",
        "simulate_and_bootstrap",
        "subprocess.run",
        "train_dual_model",
        "train_exit_model",
        "train_meta_model",
        "train_param_model",
        "train_stock_filter_model"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 68,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "daterange",
        "simulate_and_bootstrap"
      ],
      "risk_score": 47.6,
      "sha1": "96362a9137882a9d8b9801b53516c37d7f3aa65e",
      "last_modified": "2025-05-25T01:28:07",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/simulate_history_single.py",
      "imports": [
        "agents.planner_agent_sql.PlannerAgentSQL",
        "argparse",
        "core.logger.logger",
        "core.time_context.set_simulation_date",
        "datetime.datetime",
        "datetime.timedelta",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "PlannerAgentSQL",
        "agent.run_weekly_routine",
        "argparse.ArgumentParser",
        "current.strftime",
        "current.weekday",
        "logger.info",
        "logger.start",
        "parser.add_argument",
        "parser.parse_args",
        "pd.to_datetime",
        "set_simulation_date",
        "simulate_stock_over_range",
        "timedelta"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 47,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "simulate_stock_over_range"
      ],
      "risk_score": 18.8,
      "sha1": "3aad5083a1ae3adf9bcf025365952c373e9eeab0",
      "last_modified": "2025-05-03T09:15:19",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./diagnosis/view_predicted_curves.py",
      "imports": [
        "core.data_provider.load_data",
        "core.logger.logger",
        "matplotlib.pyplot",
        "numpy",
        "pandas",
        "sklearn.metrics.mean_absolute_error",
        "sklearn.metrics.mean_squared_error"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "date.strftime",
        "evaluate_model",
        "len",
        "load_actual_prices",
        "load_data",
        "load_predictions",
        "logger.error",
        "logger.info",
        "logger.warning",
        "mean",
        "mean_absolute_error",
        "mean_squared_error",
        "np.sign",
        "np.sqrt",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.dt.tz_localize",
        "plt.axhline",
        "plt.figure",
        "plt.grid",
        "plt.legend",
        "plt.plot",
        "plt.show",
        "plt.tight_layout",
        "plt.title",
        "plt.xticks",
        "pred_df.iterrows",
        "results.append",
        "shift",
        "sort_values"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:CURVE_TABLE",
          "line_number": 17
        },
        {
          "function_called": "load_data",
          "target_argument": "var:PRICE_TABLE",
          "line_number": 26
        }
      ],
      "db_tables_identified": [
        "CURVE_TABLE",
        "PRICE_TABLE"
      ],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 121,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_predictions",
        "load_actual_prices",
        "evaluate_model"
      ],
      "risk_score": 121.0,
      "sha1": "dd9797740e99548cb73da1ab15ca0eb54da39ba0",
      "last_modified": "2025-04-27T22:58:20",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./flows/auto_pipeline.py",
      "imports": [
        "agents.memory_agent.MemoryAgent",
        "archive.feature_enricher.enrich_features",
        "argparse",
        "core.backtest_bt.run_backtest",
        "core.config.settings",
        "core.data_provider.fetch_stock_data",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "datetime.date",
        "datetime.timedelta",
        "db.db.get_session",
        "models.meta_strategy_selector.train_meta_model",
        "models.stock_filter_predictor.run_stock_filter",
        "models.train_dual_model_sql.train_dual_model",
        "models.train_stock_filter_model.train_stock_filter_model",
        "prefect.flow",
        "prefect.get_run_logger",
        "prefect.server.schemas.schedules.IntervalSchedule",
        "prefect.task",
        "services.feedback_loop.update_training_data",
        "sqlalchemy.text"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "MemoryAgent",
        "argparse.ArgumentParser",
        "backtest_and_label",
        "check_drift_and_trigger",
        "date.fromisoformat",
        "df.reset_index",
        "enrich",
        "enrich_features",
        "fetch_stock_data",
        "flow",
        "get_last_date",
        "get_run_logger",
        "get_session",
        "ingest_data",
        "load_data",
        "log.info",
        "logger.info",
        "ma.check_retraining_needed",
        "parser.add_argument",
        "parser.parse_args",
        "retrain_models",
        "run_backtest",
        "run_filter",
        "run_stock_filter",
        "save_data",
        "selected.to_dict",
        "self_learning_pipeline",
        "session.commit",
        "session.execute",
        "session.execute.fetchone",
        "task",
        "text",
        "timedelta",
        "train_dual_model",
        "train_meta_model",
        "train_stock_filter_model",
        "unique",
        "update_last_date",
        "update_training_data"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 34
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 54
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": null,
          "line_number": 39
        }
      ],
      "db_tables_identified": [
        "fundamentals_table",
        "price_history_table",
        "selected_table"
      ],
      "features_identified": [],
      "function_count": 9,
      "class_count": 0,
      "loc": 115,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_last_date",
        "update_last_date",
        "ingest_data",
        "enrich",
        "run_filter",
        "backtest_and_label",
        "check_drift_and_trigger",
        "retrain_models",
        "self_learning_pipeline"
      ],
      "risk_score": 57.5,
      "sha1": "bb2a35a906256e4ba966c9fc6de59affa0e14b8e",
      "last_modified": "2025-05-16T01:18:17",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./flows/backfill_1m_features_flow.py",
      "imports": [
        "core.data_provider.fetch_stock_data",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "datetime.timedelta",
        "pandas",
        "prefect.flow",
        "prefect.get_run_logger",
        "prefect.task"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "backfill_1m_feature_flow",
        "backfill_for_symbol",
        "enrich_multi_interval_features",
        "fetch_stock_data",
        "flow",
        "get_run_logger",
        "get_simulation_date",
        "log.error",
        "log.info",
        "log.warning",
        "pd.to_datetime",
        "save_data",
        "timedelta",
        "unique"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:enriched",
          "line_number": 35
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 48,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "backfill_for_symbol",
        "backfill_1m_feature_flow"
      ],
      "risk_score": 33.6,
      "sha1": "c5c8f8723454c23f76eba5f7489b2ccb2efd2603",
      "last_modified": "2025-05-26T00:18:33",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./flows/backfill_pipeline.py",
      "imports": [
        "argparse",
        "datetime.date",
        "datetime.timedelta",
        "flows.auto_pipeline.self_learning_pipeline",
        "prefect.flow"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "argparse.ArgumentParser",
        "date.fromisoformat",
        "flow",
        "historical_backfill",
        "parser.add_argument",
        "parser.parse_args",
        "self_learning_pipeline",
        "timedelta"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 36,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "historical_backfill"
      ],
      "risk_score": 10.8,
      "sha1": "56618e902b8215d9b8901fb8a1bfa9db02007d91",
      "last_modified": "2025-05-05T07:25:38",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./flows/fundamental_pipeline.py",
      "imports": [
        "argparse",
        "bs4.BeautifulSoup",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "core.skiplist.add_to_skiplist",
        "core.skiplist.is_in_skiplist",
        "db.postgres_manager.run_query",
        "numpy",
        "os",
        "pandas",
        "pathlib.Path",
        "prefect.flow",
        "prefect.get_run_logger",
        "prefect.task",
        "requests",
        "time",
        "yfinance"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "BeautifulSoup",
        "CACHE_DIR.glob",
        "CACHE_DIR.mkdir",
        "KeyError",
        "Path",
        "_fetch_yfinance",
        "_scrape_screener",
        "add_to_skiplist",
        "all_syms.iterrows",
        "argparse.ArgumentParser",
        "clear_everything",
        "clear_local_cache",
        "clear_sql_table",
        "data.get",
        "dropna",
        "f.unlink",
        "fetch_fundamentals",
        "fetch_one.map",
        "float",
        "flow",
        "fundamental_fetch_flow",
        "get_run_logger",
        "get_text",
        "get_text.replace",
        "get_todo_symbols",
        "info.get",
        "is_cache_valid",
        "is_in_skiplist",
        "len",
        "load_data",
        "load_data.get",
        "load_data.get.tolist",
        "load_nse_symbols",
        "log.error",
        "log.warning",
        "logger.error",
        "logger.info",
        "p.add_argument",
        "p.exists",
        "p.parse_args",
        "p.stat",
        "parse_fundamentals",
        "pd.DataFrame",
        "pd.json.dumps",
        "pd.json.loads",
        "pd.read_csv",
        "r.raise_for_status",
        "ratios.get",
        "read_text",
        "replace",
        "requests.Session",
        "requests.get",
        "row.find_all",
        "run_query",
        "save_batch",
        "save_data",
        "save_local_cache",
        "sess.get",
        "sess.get.json",
        "sess.get.json.get",
        "soup.select",
        "str",
        "task",
        "time.time",
        "write_text",
        "yf.Ticker"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:INPUT_CSV",
          "line_number": 30
        },
        {
          "function_called": "load_data",
          "target_argument": "var:TABLE_NAME",
          "line_number": 152
        },
        {
          "function_called": "load_data",
          "target_argument": "var:TABLE_NAME",
          "line_number": 152
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 194
        }
      ],
      "db_tables_identified": [
        "clear_sql_table"
      ],
      "features_identified": [],
      "function_count": 14,
      "class_count": 0,
      "loc": 230,
      "cyclomatic_complexity": 18,
      "docstring_coverage": 6.67,
      "missing_docstrings": [
        "module-level",
        "load_nse_symbols",
        "is_cache_valid",
        "save_local_cache",
        "clear_sql_table",
        "clear_local_cache",
        "_scrape_screener",
        "_fetch_yfinance",
        "fetch_fundamentals",
        "parse_fundamentals",
        "clear_everything",
        "get_todo_symbols",
        "fetch_one",
        "save_batch"
      ],
      "risk_score": 386.39,
      "sha1": "ad435796a52e8536883b912ee58bb11a9faf477a",
      "last_modified": "2025-05-07T10:49:50",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./flows/trading_pipeline.py",
      "imports": [
        "core.data_provider.load_data",
        "datetime.date",
        "db.postgres_manager.run_query",
        "optuna",
        "pandas",
        "prefect.deployments.Deployment",
        "prefect.flow",
        "prefect.server.schemas.schedules.CronSchedule",
        "prefect.task",
        "vectorbt"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "CronSchedule",
        "Deployment.build_from_flow",
        "Deployment.build_from_flow.apply",
        "FeatureBuilder",
        "FeatureBuilder.build",
        "SignalGenerator",
        "SignalGenerator.generate",
        "ValueError",
        "bool",
        "date.today",
        "date.today.isoformat",
        "flow",
        "load_data",
        "optuna.create_study",
        "pd.DataFrame",
        "pf.stats",
        "pf.stats.get",
        "print",
        "run_query",
        "signals.iterrows",
        "study.optimize",
        "task",
        "task_backtest",
        "task_build_features",
        "task_execute",
        "task_fetch_price",
        "task_generate_signals",
        "task_persist_signals",
        "trial.suggest_int",
        "ts.date",
        "vbt.MA.run",
        "vbt.Portfolio.from_signals",
        "vbt.RSI.run"
      ],
      "transforms_applied": [
        "apply"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:ticker",
          "line_number": 45
        },
        {
          "function_called": "load_data",
          "target_argument": "var:ticker",
          "line_number": 95
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 6,
      "class_count": 2,
      "loc": 150,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "FeatureBuilder",
        "SignalGenerator",
        "task_fetch_price",
        "task_persist_signals",
        "task_execute",
        "optimize_strategy",
        "daily_trading_flow",
        "FeatureBuilder.__init__",
        "FeatureBuilder.build",
        "SignalGenerator.__init__",
        "SignalGenerator.generate",
        "objective"
      ],
      "risk_score": 120.0,
      "sha1": "9155121c1ca02e61a60ee4bb6504dc7391bee25e",
      "last_modified": "2025-05-05T13:46:16",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./flows/flows/schedule_precompute_features.py",
      "imports": [
        "core.logger.logger",
        "prefect.flow",
        "prefect.task",
        "subprocess"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "cmd.append",
        "flow",
        "logger.info",
        "precompute_features_flow",
        "run_precompute",
        "subprocess.run"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 19,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "run_precompute",
        "precompute_features_flow"
      ],
      "risk_score": 5.7,
      "sha1": "7fdb122e7caeafc2fdd795a085726de429da655a",
      "last_modified": "2025-05-25T13:20:55",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./fundamentals/fundamental_data_extractor.py",
      "imports": [
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.dropna",
        "len",
        "load_backup_and_save",
        "load_data",
        "logger.error",
        "logger.success",
        "pd.read_csv",
        "pd.to_numeric",
        "save_data"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:TABLE_NAME",
          "line_number": 34
        },
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:CSV_PATH",
          "line_number": 13
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 28
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 37,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_backup_and_save",
        "fetch_all"
      ],
      "risk_score": 11.1,
      "sha1": "3656b868ead69464e2a1ed0aabe49f6f4d0f32e7",
      "last_modified": "2025-05-17T07:57:27",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./integrations/drift_detection.py",
      "imports": [
        "core.data_provider.load_data",
        "core.logger.logger",
        "evidently.metric_preset.DataDriftPreset",
        "evidently.report.Report"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DataDriftPreset",
        "Report",
        "logger.info",
        "logger.warning",
        "report.as_dict",
        "report.run"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 16,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "check_drift"
      ],
      "risk_score": 3.2,
      "sha1": "645761839dbb9e5e41a2a1ad53da97ae53eb22c2",
      "last_modified": "2025-05-18T21:02:08",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./integrations/zerodha_client.py",
      "imports": [
        "json",
        "kiteconnect.KiteConnect",
        "kiteconnect.KiteTicker",
        "os"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "KiteConnect",
        "KiteTicker",
        "_kite.set_access_token",
        "json.load",
        "open"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 26,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_kite",
        "get_ticker"
      ],
      "risk_score": 10.4,
      "sha1": "637fbf79368191ebfbe95230bfcba1a18819ad85",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./integrations/zerodha_fetcher.py",
      "imports": [
        "core.logger.logger",
        "datetime.datetime",
        "datetime.timedelta",
        "dateutil.parser.parse",
        "db.conflict_utils.insert_with_conflict_handling",
        "integrations.zerodha_client.get_kite",
        "os",
        "pandas",
        "utils.time_utils.to_naive_utc"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "INTERVAL_LIMIT_DAYS.get",
        "all_df.append",
        "date_ranges.append",
        "datetime.now",
        "e.date",
        "enumerate",
        "fetch_historical_data",
        "get_instrument_token",
        "get_kite",
        "get_last_trading_day",
        "int",
        "is_valid_price_df",
        "isinstance",
        "kite.historical_data",
        "len",
        "logger.debug",
        "logger.error",
        "logger.success",
        "logger.warning",
        "main",
        "max",
        "parse",
        "pd.DataFrame",
        "pd.concat",
        "pd.concat.drop_duplicates",
        "pd.concat.drop_duplicates.sort_values",
        "pd.read_csv",
        "required_cols.issubset",
        "reversed",
        "s.date",
        "timedelta",
        "to_naive_utc",
        "today.weekday"
      ],
      "transforms_applied": [
        "concat",
        "drop_duplicates",
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "data/instruments.csv",
          "line_number": 88
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 100,
      "cyclomatic_complexity": 16,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_last_trading_day",
        "is_valid_price_df",
        "fetch_historical_data",
        "get_instrument_token",
        "main"
      ],
      "risk_score": 160.0,
      "sha1": "f0a26b9998239c5ffca96c4369c75141f3d3f23e",
      "last_modified": "2025-05-21T09:52:57",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./integrations/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 0,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.0,
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "last_modified": "2025-04-21T05:28:36",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./live/bar_generator.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "datetime.datetime",
        "json",
        "pandas",
        "pytz.timezone",
        "redis",
        "time"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "build_ohlcv",
        "datetime.now",
        "datetime.now.strftime",
        "df.set_index",
        "enrich_and_save",
        "enrich_multi_interval_features",
        "get_ticks",
        "json.loads",
        "len",
        "main",
        "max",
        "min",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.normalize",
        "print",
        "r.delete",
        "r.lpush",
        "r.lrange",
        "redis.Redis",
        "save_data",
        "strftime",
        "time.sleep",
        "timezone"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:enriched",
          "line_number": 61
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 89,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_ticks",
        "build_ohlcv",
        "enrich_and_save",
        "main"
      ],
      "risk_score": 80.1,
      "sha1": "a03d700576daa58ae812fb33e090004ea9b72742",
      "last_modified": "2025-05-25T23:31:22",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./live/tick_collector.py",
      "imports": [
        "datetime.datetime",
        "json",
        "kiteconnect.KiteTicker",
        "os",
        "pytz.timezone"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "INSTRUMENT_TOKENS.items",
        "INSTRUMENT_TOKENS.values",
        "KiteTicker",
        "datetime.now",
        "datetime.now.strftime",
        "kws.connect",
        "list",
        "main",
        "next",
        "os.getenv",
        "print",
        "str",
        "tick.get",
        "timezone",
        "ws.set_mode",
        "ws.subscribe"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 56,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "on_ticks",
        "on_connect",
        "on_close",
        "on_error",
        "main"
      ],
      "risk_score": 28.0,
      "sha1": "c39ea53ad2108b1ae511329bc9cadd7ba252c983",
      "last_modified": "2025-05-25T19:51:49",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./live/tick_collector_redis.py",
      "imports": [
        "datetime.datetime",
        "json",
        "kiteconnect.KiteTicker",
        "os",
        "pytz.timezone",
        "redis"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "INSTRUMENT_TOKENS.items",
        "INSTRUMENT_TOKENS.values",
        "KiteTicker",
        "datetime.now",
        "datetime.now.strftime",
        "json.dumps",
        "kws.connect",
        "list",
        "main",
        "next",
        "os.getenv",
        "print",
        "r.rpush",
        "redis.Redis",
        "str",
        "tick.get",
        "timezone",
        "ws.set_mode",
        "ws.subscribe"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 63,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "on_ticks",
        "on_connect",
        "on_close",
        "on_error",
        "main"
      ],
      "risk_score": 31.5,
      "sha1": "9d8fc9b58ac4680a35b87852046244bf39d72fa4",
      "last_modified": "2025-05-25T19:52:14",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./models/meta_strategy_selector.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.model_io.save_model",
        "itertools",
        "pandas",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "RandomForestRegressor",
        "RuntimeError",
        "df.dropna",
        "df.nlargest",
        "dfs.append",
        "itertools.product",
        "len",
        "load_combined_grid_data",
        "load_model",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "mean_squared_error",
        "model.fit",
        "model.predict",
        "pd.DataFrame",
        "pd.Timestamp.now",
        "pd.Timestamp.now.strftime",
        "pd.concat",
        "pd.read_csv",
        "range",
        "save_data",
        "save_model",
        "suggest_best_parameters",
        "train_meta_model",
        "train_test_split"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": null,
          "line_number": 71
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 84
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 111
        }
      ],
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:path",
          "line_number": 20
        }
      ],
      "db_tables_identified": [
        "meta_metadata_table"
      ],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 113,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 75.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 16.95,
      "sha1": "897748946cbb473511a86989bb1f15592a6f9035",
      "last_modified": "2025-05-04T18:51:36",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/ml_dual_model_prediction_sql.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.time_context.get_simulation_date",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df_fund.iterrows",
        "exit_model.predict",
        "exit_model.predict.mean",
        "filter_model.predict_proba",
        "float",
        "get_simulation_date",
        "load_data",
        "load_model",
        "logger.info",
        "mean",
        "predict_dual_model",
        "results.append",
        "sorted"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:data_path",
          "line_number": 23
        },
        {
          "function_called": "load_data",
          "target_argument": "var:feature_path",
          "line_number": 24
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 28
        },
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 29
        }
      ],
      "db_tables_identified": [
        "feature_table",
        "fundamentals_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 64,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 50.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 22.4,
      "sha1": "f5d1b467e01f5e46bb08084bcf9e2794c6bf182e",
      "last_modified": "2025-05-09T02:13:49",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/ml_training_sql.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.save_model",
        "pandas",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split",
        "sklearn.preprocessing.LabelEncoder"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "LabelEncoder",
        "RandomForestRegressor",
        "astype",
        "df.drop",
        "df_base.iterrows",
        "enrich_multi_interval_features",
        "le.fit_transform",
        "list",
        "load_data",
        "logger.error",
        "logger.start",
        "logger.success",
        "mean_squared_error",
        "merged_rows.append",
        "model.fit",
        "model.predict",
        "pd.DataFrame",
        "pd.Timestamp.now",
        "pd.Timestamp.now.strftime",
        "pd.concat",
        "pd.merge",
        "pd.to_datetime",
        "save_data",
        "save_model",
        "train_meta_model",
        "train_test_split"
      ],
      "transforms_applied": [
        "concat",
        "merge"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 30
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "meta_model",
          "line_number": 78
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": null,
          "line_number": 84
        }
      ],
      "db_tables_identified": [
        "meta_metadata_table",
        "meta_training_table"
      ],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 94,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "module-level",
        "merge_intervals"
      ],
      "risk_score": 56.4,
      "sha1": "25a74e222b9bcd821f46fbac3e9c2294a1554da5",
      "last_modified": "2025-05-22T00:07:38",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/stock_filter_predictor.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "core.model_io.load_model",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "fillna",
        "len",
        "load_data",
        "load_model",
        "logger.error",
        "logger.success",
        "logger.warning",
        "model.predict",
        "pd.DataFrame",
        "run_stock_filter",
        "save_data"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 11
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df_selected",
          "line_number": 40
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": null,
          "line_number": 18
        }
      ],
      "db_tables_identified": [
        "fundamentals_table",
        "ml_selected_stocks_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 47,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "run_stock_filter"
      ],
      "risk_score": 32.9,
      "sha1": "bc85e127aa689325d362776bcb209b5f601b4306",
      "last_modified": "2025-05-09T15:31:51",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_dual_model_sql.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.save_model",
        "optuna",
        "pandas",
        "sklearn.ensemble.RandomForestClassifier",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.accuracy_score",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "RandomForestClassifier",
        "RandomForestRegressor",
        "_load_training",
        "accuracy_score",
        "clf.fit",
        "clf.predict",
        "clf_final.fit",
        "clf_final.predict",
        "drop",
        "list",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "mean_squared_error",
        "optuna.create_study",
        "pd.Timestamp.now",
        "reg.fit",
        "reg.predict",
        "reg_final.fit",
        "reg_final.predict",
        "round",
        "save_model",
        "str",
        "study_clf.optimize",
        "study_reg.optimize",
        "train_dual_model",
        "train_test_split",
        "trial.suggest_categorical",
        "trial.suggest_int"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:df_name",
          "line_number": 16
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 68
        },
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 127
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 144,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "_load_training",
        "train_dual_model",
        "objective_class",
        "objective_reg"
      ],
      "risk_score": 129.6,
      "sha1": "9e2b0ebd6be86c136b098b350b0a572b879dc025",
      "last_modified": "2025-05-19T17:20:50",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_entry_exit_model.py",
      "imports": [
        "core.data_provider.load_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.save_model",
        "json",
        "pandas",
        "sklearn.ensemble.RandomForestClassifier",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.classification_report",
        "sklearn.model_selection.train_test_split",
        "sklearn.multioutput.MultiOutputRegressor",
        "sklearn.preprocessing.LabelEncoder"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "LabelEncoder",
        "MultiOutputRegressor",
        "RandomForestClassifier",
        "RandomForestRegressor",
        "astype",
        "cfg.get",
        "classification_report",
        "clf.fit",
        "clf.predict",
        "df.drop",
        "enrich_multi_interval_features",
        "exit_rule.get",
        "int",
        "json.loads",
        "label_enc.fit_transform",
        "list",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "parse_exit_config",
        "pd.concat",
        "pd.isna",
        "pd.to_datetime",
        "reg.fit",
        "row.get",
        "rows.append",
        "save_model",
        "trades.iterrows",
        "train_entry_exit_model",
        "train_test_split"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "paper_trades",
          "line_number": 35
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "entry_exit_model",
          "line_number": 91
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 102,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "parse_exit_config",
        "train_entry_exit_model"
      ],
      "risk_score": 81.6,
      "sha1": "25406d5941253ea38bf17121613994757c7c4fe3",
      "last_modified": "2025-05-22T14:03:38",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_exit_model.py",
      "imports": [
        "collections.Counter",
        "core.config.settings",
        "core.data_provider.load_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.save_model",
        "pandas",
        "sklearn.ensemble.RandomForestClassifier",
        "sklearn.metrics.accuracy_score",
        "sklearn.metrics.classification_report",
        "sklearn.model_selection.train_test_split"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Counter",
        "RandomForestClassifier",
        "accuracy_score",
        "classification_report",
        "clf.fit",
        "clf.predict",
        "clf.predict_proba",
        "copy",
        "df_all.dropna",
        "df_trades.iterrows",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "enrich_multi_interval_features",
        "fillna",
        "fillna.replace",
        "float",
        "int",
        "len",
        "list",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "pd.Timestamp.now",
        "pd.concat",
        "pd.isna",
        "pd.to_datetime",
        "proba.mean",
        "proba.std",
        "round",
        "row.get",
        "rows.append",
        "save_model",
        "str",
        "train_exit_model",
        "train_test_split"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 15
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:model_name",
          "line_number": 73
        }
      ],
      "db_tables_identified": [
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 93,
      "cyclomatic_complexity": 11,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "train_exit_model"
      ],
      "risk_score": 102.3,
      "sha1": "2e2468680db1c3fd9aca61afa701626f6e33dd0c",
      "last_modified": "2025-05-24T14:09:13",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_meta_model.py",
      "imports": [
        "core.config.get_feature_columns",
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.save_model",
        "pandas",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "RandomForestRegressor",
        "copy",
        "copy.fillna",
        "copy.fillna.replace",
        "df.dropna",
        "df_base.iterrows",
        "enrich_multi_interval_features",
        "float",
        "get_feature_columns",
        "list",
        "load_data",
        "logger.error",
        "logger.start",
        "logger.success",
        "mean_squared_error",
        "model.fit",
        "model.predict",
        "pd.DataFrame",
        "pd.Timestamp.now",
        "pd.concat",
        "pd.isna",
        "pd.to_datetime",
        "row.get",
        "rows.append",
        "save_data",
        "save_model",
        "train_meta_model",
        "train_test_split"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 17
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "meta_model",
          "line_number": 65
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": null,
          "line_number": 74
        }
      ],
      "db_tables_identified": [
        "meta_metadata_table",
        "meta_training_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 85,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "train_meta_model"
      ],
      "risk_score": 59.5,
      "sha1": "49d952c74fe2511433fb8e179dab3195dd709bbc",
      "last_modified": "2025-05-24T13:59:04",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_param_model.py",
      "imports": [
        "collections.Counter",
        "core.config.get_feature_columns",
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.save_model",
        "pandas",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split",
        "sklearn.multioutput.MultiOutputRegressor",
        "sklearn.preprocessing.LabelEncoder"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Counter",
        "LabelEncoder",
        "MultiOutputRegressor",
        "RandomForestRegressor",
        "copy",
        "copy.fillna",
        "copy.fillna.replace",
        "df.dropna",
        "dropna",
        "dropna.unique",
        "fillna",
        "float",
        "get_feature_columns",
        "le.fit_transform",
        "len",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "mean_squared_error",
        "model.fit",
        "model.predict",
        "pd.Timestamp.now",
        "round",
        "save_model",
        "std",
        "str",
        "train_param_model",
        "train_test_split"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 16
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:model_name",
          "line_number": 58
        }
      ],
      "db_tables_identified": [
        "training_data_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 81,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "train_param_model"
      ],
      "risk_score": 56.7,
      "sha1": "e86818c3566b41cecaaf395b3496af51a67dc285",
      "last_modified": "2025-05-24T14:09:52",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/train_stock_filter_model.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.model_io.save_model",
        "optuna",
        "pandas",
        "sklearn.ensemble.RandomForestClassifier",
        "sklearn.metrics.accuracy_score",
        "sklearn.metrics.classification_report",
        "sklearn.model_selection.train_test_split"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "RandomForestClassifier",
        "accuracy_score",
        "any",
        "classification_report",
        "fillna",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.success",
        "model.fit",
        "model.predict",
        "optuna.create_study",
        "save_model",
        "study.optimize",
        "train_stock_filter_model",
        "train_test_split",
        "trial.suggest_categorical",
        "trial.suggest_int"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "training_data",
          "line_number": 17
        }
      ],
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "filter_model",
          "line_number": 62
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 70,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "module-level",
        "objective"
      ],
      "risk_score": 37.34,
      "sha1": "fd45534e5a8aa72a1788498c1bd5307dbe79ebfd",
      "last_modified": "2025-05-17T07:51:43",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": []
    },
    {
      "file": "./models/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 0,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.0,
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "last_modified": "2025-04-19T00:52:39",
      "custom_tags": [
        "module-type:model"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./predictive_trader/A_tester.py",
      "imports": [
        "os",
        "predictive_trader.price_predictor_lgbm.train_lgbm_model",
        "predictive_trader.price_predictor_lstm.train_lstm_model",
        "predictive_trader.trade_signal_generator.generate_signals_for_list"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "generate_signals_for_list",
        "train_lgbm_model",
        "train_lstm_model"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 15,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 3.0,
      "sha1": "e050372742f3cdbeae8ce17d27b4a0b333556343",
      "last_modified": "2025-04-27T08:40:21",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./predictive_trader/backtest_lstm_predictor.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "datetime.timedelta",
        "numpy",
        "os",
        "pandas",
        "predictive_trader.price_predictor_lstm_v2.FEATURE_WINDOW",
        "predictive_trader.price_predictor_lstm_v2.FUTURE_OFFSET",
        "predictive_trader.price_predictor_lstm_v2.predict_5day_return_v2",
        "predictive_trader.price_predictor_lstm_v2.train_lstm_model_v2"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "backtest_lstm_predictor",
        "len",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "pd.date_range",
        "predict_5day_return_v2",
        "print",
        "results.append",
        "round",
        "sort_values",
        "sort_values.reset_index",
        "test_date.date",
        "train_lstm_model_v2"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_features",
          "line_number": 20
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 68,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "backtest_lstm_predictor"
      ],
      "risk_score": 54.4,
      "sha1": "03b977d57b6cc13d0125a7c5e09f03575d2a5452",
      "last_modified": "2025-05-01T06:08:52",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/curve_predictor.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "db.db_router.insert_dataframe",
        "db.db_router.run_query",
        "os",
        "pandas",
        "predictive_trader.price_predictor_lstm.predict_next_5days_lstm",
        "predictive_trader.price_predictor_lstm.train_lstm_model"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "PATHS.get",
        "curve.get",
        "curves.append",
        "df.rename",
        "generate_curves_for_list",
        "get_simulation_date",
        "insert_dataframe",
        "len",
        "logger.info",
        "logger.success",
        "logger.warning",
        "os.makedirs",
        "os.path.exists",
        "os.path.join",
        "pd.DataFrame",
        "pd.Timestamp.now",
        "pd.Timestamp.now.strftime",
        "predict_next_5days_lstm",
        "run_query",
        "train_lstm_model"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "CURVE_TABLE"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 83,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_curves_for_list"
      ],
      "risk_score": 58.1,
      "sha1": "e7e1fcfeb98f1a40bc1111a538e5e5e74ba9a009",
      "last_modified": "2025-04-27T22:16:45",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./predictive_trader/curve_signal_generator.py",
      "imports": [
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "db.db_router.insert_dataframe",
        "db.db_router.run_query",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df_today.iterrows",
        "generate_signals_from_curves",
        "get_simulation_date",
        "insert_dataframe",
        "len",
        "load_data",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "pd.Timestamp.now",
        "pd.Timestamp.now.strftime",
        "pd.isna",
        "row.get",
        "run_query",
        "signals.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:CURVE_TABLE",
          "line_number": 20
        }
      ],
      "db_tables_identified": [
        "CURVE_TABLE",
        "SIGNAL_TABLE"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 76,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_signals_from_curves"
      ],
      "risk_score": 76.0,
      "sha1": "a1be2661108972cbfa5d1d07d3dd21ceae0719ca",
      "last_modified": "2025-04-27T21:53:36",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/model_manager.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "datetime.datetime",
        "joblib",
        "numpy",
        "os",
        "pandas",
        "sklearn.preprocessing.MinMaxScaler",
        "tensorflow",
        "tensorflow.keras.Input",
        "tensorflow.keras.layers.Dense",
        "tensorflow.keras.layers.LSTM",
        "tensorflow.keras.models.Sequential"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Dense",
        "Input",
        "LSTM",
        "MinMaxScaler",
        "PATHS.get",
        "Sequential",
        "X.append",
        "build_lstm_model",
        "df.tail",
        "ffill",
        "joblib.dump",
        "joblib.load",
        "len",
        "load_data",
        "load_price_data",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "model.compile",
        "model.fit",
        "model.save",
        "np.array",
        "np.reshape",
        "os.makedirs",
        "os.path.exists",
        "os.path.join",
        "range",
        "scaler.fit_transform",
        "sort_values",
        "tf.keras.models.load_model",
        "train_model_upto",
        "values.reshape",
        "y.append"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_price_history",
          "line_number": 34
        }
      ],
      "model_save_operations": [
        {
          "function_called": "joblib.dump",
          "target_argument": "var:scaler",
          "line_number": 75
        }
      ],
      "model_load_operations": [
        {
          "function_called": "joblib.load",
          "target_argument": "var:scaler_path",
          "line_number": 90
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 92,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "build_lstm_model",
        "load_price_data",
        "train_model_upto",
        "load_model_for_date"
      ],
      "risk_score": 55.2,
      "sha1": "a460de5c5b078dc90b816dc0032605c5da8de77c",
      "last_modified": "2025-04-27T20:42:08",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/price_predictor_lgbm.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "joblib",
        "lightgbm",
        "numpy",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "PATHS.get",
        "compute_rsi",
        "delta.where",
        "delta.where.rolling",
        "delta.where.rolling.mean",
        "df.dropna",
        "df.tail",
        "generate_features",
        "joblib.dump",
        "joblib.load",
        "lgb.LGBMClassifier",
        "load_data",
        "load_price_data",
        "logger.error",
        "logger.success",
        "model.fit",
        "model.predict",
        "np.sign",
        "os.makedirs",
        "os.path.join",
        "pct_change",
        "pct_change.rolling",
        "pct_change.rolling.std",
        "predict_movement_lgbm",
        "print",
        "rolling",
        "rolling.mean",
        "series.diff",
        "shift",
        "sort_values",
        "train_lgbm_model",
        "y.dropna"
      ],
      "transforms_applied": [
        "rolling",
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_price_history",
          "line_number": 32
        }
      ],
      "model_save_operations": [
        {
          "function_called": "joblib.dump",
          "target_argument": "var:model",
          "line_number": 59
        }
      ],
      "model_load_operations": [
        {
          "function_called": "joblib.load",
          "target_argument": "var:model_path",
          "line_number": 65
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 86,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_features",
        "compute_rsi",
        "load_price_data",
        "train_lgbm_model",
        "predict_movement_lgbm"
      ],
      "risk_score": 68.8,
      "sha1": "7a0b14563aa7c920d9449168e392a3ee189d0752",
      "last_modified": "2025-04-27T08:51:52",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/price_predictor_lstm.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "db.db_router.insert_dataframe",
        "joblib",
        "numpy",
        "os",
        "pandas",
        "predictive_trader.model_manager.load_model_for_date",
        "sklearn.preprocessing.MinMaxScaler",
        "tensorflow",
        "tensorflow.keras.Input",
        "tensorflow.keras.layers.Dense",
        "tensorflow.keras.layers.LSTM",
        "tensorflow.keras.models.Sequential"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Dense",
        "Input",
        "LSTM",
        "MinMaxScaler",
        "PATHS.get",
        "Sequential",
        "X.append",
        "build_lstm_model",
        "close_prices.reshape",
        "datetime.now",
        "datetime.now.strftime",
        "df.tail",
        "enumerate",
        "ffill",
        "float",
        "get_simulation_date",
        "insert_dataframe",
        "joblib.dump",
        "len",
        "load_data",
        "load_model_for_date",
        "load_price_data",
        "logger.error",
        "logger.info",
        "logger.success",
        "model.compile",
        "model.fit",
        "model.predict",
        "model.save",
        "np.array",
        "np.reshape",
        "os.makedirs",
        "os.path.join",
        "pd.DataFrame",
        "predict_next_5days_lstm",
        "print",
        "range",
        "save_5day_predictions",
        "scaler.fit_transform",
        "scaler.inverse_transform",
        "scaler.transform",
        "sort_values",
        "tf.config.list_physical_devices",
        "train_lstm_model",
        "values.reshape",
        "y.append"
      ],
      "transforms_applied": [
        "sort_values",
        "transform"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_price_history",
          "line_number": 39
        }
      ],
      "model_save_operations": [
        {
          "function_called": "joblib.dump",
          "target_argument": "var:scaler",
          "line_number": 76
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 123,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "build_lstm_model",
        "load_price_data",
        "train_lstm_model",
        "predict_next_5days_lstm",
        "save_5day_predictions"
      ],
      "risk_score": 123.0,
      "sha1": "f55ce1e3cdfaed83cbc0159bacb0f1ac607c2a43",
      "last_modified": "2025-04-27T20:46:26",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/price_predictor_lstm_intraday.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "datetime.time",
        "joblib",
        "numpy",
        "os",
        "pandas",
        "sklearn.preprocessing.MinMaxScaler",
        "tensorflow.keras.Input",
        "tensorflow.keras.layers.Dense",
        "tensorflow.keras.layers.LSTM",
        "tensorflow.keras.models.Sequential",
        "tensorflow.keras.models.load_model"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Dense",
        "Input",
        "LSTM",
        "MinMaxScaler",
        "PATHS.get",
        "Sequential",
        "X_seq.append",
        "any",
        "build_model",
        "df.sort_values",
        "df.sort_values.reset_index",
        "dt.time.between",
        "fetch_stock_data",
        "joblib.dump",
        "joblib.load",
        "latest_features.isna",
        "latest_features.isna.any",
        "latest_features.isna.any.any",
        "len",
        "load_model",
        "logger.error",
        "logger.success",
        "logger.warning",
        "min",
        "model.compile",
        "model.fit",
        "model.predict",
        "model.save",
        "np.array",
        "np.expand_dims",
        "os.makedirs",
        "os.path.exists",
        "os.path.join",
        "pd.to_datetime",
        "predict_intraday_return",
        "print",
        "range",
        "reset_index",
        "scaler.fit_transform",
        "scaler.transform",
        "shift",
        "target.dropna",
        "target.dropna.reset_index",
        "time",
        "train_intraday_model",
        "y_seq.append"
      ],
      "transforms_applied": [
        "sort_values",
        "transform"
      ],
      "modifies_stream": true,
      "model_save_operations": [
        {
          "function_called": "joblib.dump",
          "target_argument": "var:scaler",
          "line_number": 82
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_path",
          "line_number": 99
        },
        {
          "function_called": "joblib.load",
          "target_argument": "var:scaler_path",
          "line_number": 100
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 133,
      "cyclomatic_complexity": 12,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "build_model",
        "train_intraday_model",
        "predict_intraday_return"
      ],
      "risk_score": 159.6,
      "sha1": "17d4b89ffbee32ef7c79c9a798619401360e8dfe",
      "last_modified": "2025-05-02T00:59:43",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/price_predictor_lstm_v2.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.logger.logger",
        "joblib",
        "numpy",
        "os",
        "pandas",
        "sklearn.preprocessing.MinMaxScaler",
        "tensorflow.keras.Input",
        "tensorflow.keras.layers.Dense",
        "tensorflow.keras.layers.LSTM",
        "tensorflow.keras.models.Sequential",
        "tensorflow.keras.models.load_model"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Dense",
        "Input",
        "LSTM",
        "MinMaxScaler",
        "PATHS.get",
        "Sequential",
        "X_seq.append",
        "build_model",
        "df.sort_values",
        "joblib.dump",
        "joblib.load",
        "latest_features.isna",
        "latest_features.isna.any",
        "latest_features.isna.any.any",
        "len",
        "load_data",
        "load_model",
        "logger.error",
        "logger.success",
        "logger.warning",
        "min",
        "model.compile",
        "model.fit",
        "model.predict",
        "model.save",
        "np.array",
        "np.expand_dims",
        "os.makedirs",
        "os.path.exists",
        "os.path.join",
        "predict_5day_return_v2",
        "print",
        "range",
        "reset_index",
        "scaler.fit_transform",
        "scaler.transform",
        "shift",
        "target.dropna",
        "target.dropna.reset_index",
        "train_lstm_model_v2",
        "y_seq.append"
      ],
      "transforms_applied": [
        "sort_values",
        "transform"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_features",
          "line_number": 43
        },
        {
          "function_called": "load_data",
          "target_argument": "stock_features",
          "line_number": 109
        }
      ],
      "model_save_operations": [
        {
          "function_called": "joblib.dump",
          "target_argument": "var:scaler",
          "line_number": 89
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_path",
          "line_number": 106
        },
        {
          "function_called": "joblib.load",
          "target_argument": "var:scaler_path",
          "line_number": 107
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 141,
      "cyclomatic_complexity": 13,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "build_model",
        "train_lstm_model_v2",
        "predict_5day_return_v2"
      ],
      "risk_score": 183.3,
      "sha1": "4c885c983d9411da1b1e30eaafa03dc89ede4e03",
      "last_modified": "2025-05-01T23:50:59",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./predictive_trader/trade_signal_generator.py",
      "imports": [
        "core.data_provider.fetch_stock_data",
        "core.logger.logger",
        "datetime.datetime",
        "db.db_router.insert_dataframe",
        "os",
        "pandas",
        "predictive_trader.price_predictor_lgbm.predict_movement_lgbm",
        "predictive_trader.price_predictor_lstm.predict_next_close_lstm",
        "predictive_trader.price_predictor_lstm.predict_next_n_days_lstm"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "datetime.now",
        "datetime.now.strftime",
        "fetch_stock_data",
        "generate_signals_for_list",
        "generate_trade_signal",
        "insert_dataframe",
        "len",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "pd.DataFrame",
        "predict_movement_lgbm",
        "predict_next_n_days_lstm",
        "signals.append",
        "str"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 78,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "generate_trade_signal",
        "generate_signals_for_list"
      ],
      "risk_score": 78.0,
      "sha1": "27dd3218cc7647b6ef3612d03bae6c31aaf35b27",
      "last_modified": "2025-04-27T11:27:45",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./reports/daily_snapshot.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "datetime.datetime",
        "datetime.timedelta",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "compute_snapshot",
        "copy",
        "datetime.now",
        "datetime.now.date",
        "df.sort_values",
        "len",
        "load_data",
        "logger.success",
        "logger.warning",
        "mean",
        "nunique",
        "pd.to_datetime",
        "print",
        "round",
        "str",
        "timedelta"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:TABLE_NAME",
          "line_number": 13
        }
      ],
      "db_tables_identified": [
        "trades_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 55,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "compute_snapshot"
      ],
      "risk_score": 33.0,
      "sha1": "29f7db6bb31c2317492af79cab87295eb503cfe9",
      "last_modified": "2025-05-26T01:42:11",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./rl/replay_buffer.py",
      "imports": [
        "datetime.datetime",
        "datetime.timedelta",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "datetime.now",
        "len",
        "min",
        "os.path.exists",
        "pd.DataFrame",
        "pd.concat",
        "pd.read_parquet",
        "pd.to_datetime",
        "self.buffer.sample",
        "self.buffer.to_parquet",
        "timedelta"
      ],
      "transforms_applied": [
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "pd.read_parquet",
          "target_argument": null,
          "line_number": 11
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 37,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "ReplayBuffer",
        "ReplayBuffer.__init__",
        "ReplayBuffer.add_episode",
        "ReplayBuffer.sample",
        "ReplayBuffer.clear_old",
        "ReplayBuffer.__len__"
      ],
      "risk_score": 7.4,
      "sha1": "2116a726fefa1f9cefd1affb74c3a268156633f3",
      "last_modified": "2025-05-22T23:04:48",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./rl/rl_finetune.py",
      "imports": [
        "core.config.settings",
        "core.logger.logger",
        "core.model_io.load_latest_model",
        "core.model_io.load_model",
        "core.model_io.save_model",
        "datetime.datetime",
        "db.replay_buffer_sql.load_replay_episodes",
        "numpy",
        "os",
        "rl.envs.trading_env.TradingEnv",
        "stable_baselines3.PPO",
        "stable_baselines3.common.vec_env.DummyVecEnv"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DummyVecEnv",
        "OfflineEnv",
        "PPO.load",
        "apply",
        "datetime.now",
        "datetime.now.strftime",
        "episodes.reset_index",
        "episodes_df.dropna",
        "episodes_df.dropna.copy",
        "f.values",
        "finetune_rl",
        "isinstance",
        "len",
        "list",
        "load_model",
        "load_replay_episodes",
        "logger.error",
        "logger.start",
        "logger.success",
        "logger.warning",
        "model.learn",
        "model.set_env",
        "model_name.replace",
        "np.array",
        "row.get",
        "save_model",
        "str"
      ],
      "transforms_applied": [
        "apply"
      ],
      "modifies_stream": true,
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:final_model_name",
          "line_number": 64
        }
      ],
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_name",
          "line_number": 53
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 76,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "OfflineEnv",
        "finetune_rl",
        "OfflineEnv.__init__",
        "OfflineEnv.reset",
        "OfflineEnv.step"
      ],
      "risk_score": 53.2,
      "sha1": "53a17eec29d686c3d036debfc3ca53566845bc79",
      "last_modified": "2025-05-24T14:35:29",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./rl/train_rl_agent.py",
      "imports": [
        "argparse",
        "core.config.settings",
        "core.logger.logger",
        "core.model_io.save_model",
        "core.rl_predictor.load_rl_frame",
        "datetime.datetime",
        "os",
        "pandas",
        "rl.envs.trading_env.TradingEnv",
        "stable_baselines3.PPO",
        "stable_baselines3.common.vec_env.DummyVecEnv"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DummyVecEnv",
        "PPO",
        "TradingEnv",
        "ValueError",
        "argparse.ArgumentParser",
        "args.freq.lower",
        "datetime.now",
        "datetime.now.strftime",
        "get_symbols",
        "len",
        "load_rl_frame",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "main",
        "make_env",
        "model.learn",
        "os.makedirs",
        "parser.add_argument",
        "parser.parse_args",
        "pd.Timestamp.now",
        "save_model",
        "skipped.append",
        "str",
        "valid_envs.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:model_name",
          "line_number": 61
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 91,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_symbols",
        "make_env",
        "main",
        "_env"
      ],
      "risk_score": 54.6,
      "sha1": "d16ff4142d0292b42a6c3a2fc7cef2bf1d6432d4",
      "last_modified": "2025-05-24T14:33:28",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./rl/train_rl_intraday.py",
      "imports": [
        "rl.train_rl_agent.main",
        "sys"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "train_main"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 8,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.6,
      "sha1": "a8c4eecf4625dd0fb9f4f459b7dc8fb6bedaef58",
      "last_modified": "2025-05-25T01:28:20",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./rl/utils.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 0,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.0,
      "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
      "last_modified": "2025-05-19T13:16:15",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./rl/envs/offline_env.py",
      "imports": [
        "gymnasium.Env",
        "gymnasium.spaces.Box",
        "gymnasium.spaces.Discrete",
        "hashlib",
        "logging",
        "numpy",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Box",
        "Discrete",
        "apply",
        "bool",
        "df.apply",
        "df.copy",
        "df.drop",
        "df.groupby",
        "df.groupby.cumcount",
        "episodes_df.reset_index",
        "f.values",
        "handler.setFormatter",
        "hashlib.md5",
        "hashlib.md5.hexdigest",
        "key.encode",
        "len",
        "list",
        "logger.addHandler",
        "logger.info",
        "logger.setLevel",
        "logging.Formatter",
        "logging.StreamHandler",
        "logging.getLogger",
        "np.array",
        "np.where",
        "row.get",
        "self._calculate_shaped_reward",
        "self._prepare_episodes",
        "shift",
        "super",
        "super.__init__",
        "super.reset",
        "transform"
      ],
      "transforms_applied": [
        "apply",
        "groupby",
        "transform"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 1,
      "loc": 108,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 12.5,
      "missing_docstrings": [
        "module-level",
        "OfflineEnv.__init__",
        "OfflineEnv._prepare_episodes",
        "OfflineEnv.reset",
        "OfflineEnv._calculate_shaped_reward",
        "OfflineEnv.step",
        "generate_episode_id"
      ],
      "risk_score": 47.25,
      "sha1": "083e2efaabd969323cbe4b865fd49bc0f95480d9",
      "last_modified": "2025-05-24T13:24:45",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./rl/envs/trading_env.py",
      "imports": [
        "core.data_provider.fetch_stock_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.load_latest_model",
        "core.model_io.load_model",
        "core.model_io.save_model",
        "core.rl_predictor.TradingEnv",
        "core.rl_predictor.load_policy",
        "core.rl_predictor.load_rl_frame",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "gymnasium",
        "gymnasium.spaces",
        "numpy",
        "stable_baselines3.PPO",
        "stable_baselines3.common.vec_env.DummyVecEnv"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "DummyVecEnv",
        "TradingEnv",
        "ValueError",
        "datetime.now",
        "df.astype",
        "env.reset",
        "int",
        "len",
        "load_policy",
        "load_rl_frame",
        "max",
        "min",
        "np.all",
        "np.append",
        "np.append.astype",
        "np.isfinite",
        "np.mean",
        "np.std",
        "policy.predict",
        "save_model",
        "self._calculate_reward",
        "self._get_obs",
        "self.reset",
        "self.returns.append",
        "spaces.Box",
        "spaces.Discrete",
        "str",
        "super",
        "super.__init__",
        "super.reset",
        "values.flatten"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": "var:model_name",
          "line_number": 178
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 1,
      "loc": 210,
      "cyclomatic_complexity": 18,
      "docstring_coverage": 11.11,
      "missing_docstrings": [
        "module-level",
        "save_rl_model",
        "predict_with_fallback",
        "TradingEnv.__init__",
        "TradingEnv._get_obs",
        "TradingEnv.reset",
        "TradingEnv._calculate_reward",
        "TradingEnv.step"
      ],
      "risk_score": 336.0,
      "sha1": "15f5d0488b46574bc5a473a007b5dc3e71caca69",
      "last_modified": "2025-05-24T13:09:00",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/check_db_orm_match.py",
      "imports": [
        "db.models.Base",
        "sqlalchemy.create_engine",
        "sqlalchemy.inspect"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Base.__subclasses__",
        "check_schema",
        "create_engine",
        "inspect",
        "inspector.get_columns",
        "inspector.has_table",
        "print",
        "set",
        "sorted",
        "table_class.__table__.columns.keys"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "__table",
        "has_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 32,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "check_schema"
      ],
      "risk_score": 25.6,
      "sha1": "b7b6c203af40faafda28b28196b116c3c61b63ff",
      "last_modified": "2025-05-09T01:46:52",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./scripts/fetch_instruments.py",
      "imports": [
        "integrations.zerodha_client.get_kite",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.to_csv",
        "get_kite",
        "kite.instruments",
        "pd.DataFrame",
        "print"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_write_operations": [
        {
          "function_called": "df.to_csv",
          "target_argument": "data/instruments.csv",
          "line_number": 7
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 8,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.8,
      "sha1": "e09c4714cc915a355e2559740c43bf45dad0f1f2",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/generate_token.py",
      "imports": [
        "json",
        "kiteconnect.KiteConnect",
        "os",
        "webbrowser"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "KiteConnect",
        "input",
        "json.dump",
        "json.load",
        "kite.generate_session",
        "kite.login_url",
        "open",
        "print",
        "webbrowser.open"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 26,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 7.8,
      "sha1": "679b730dee0cc4686eec61c4665e20ae81d9bec5",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./scripts/init_db.py",
      "imports": [
        "db.db.engine",
        "db.models.Base"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Base.metadata.create_all",
        "print"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 9,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.8,
      "sha1": "d45dd04f39c2769e805cafc609174dce1f86b574",
      "last_modified": "2025-05-25T12:14:17",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./scripts/load_backup_fundamentals.py",
      "imports": [
        "core.data_provider.save_data",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.rename",
        "pd.read_csv",
        "save_data"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:CSV_PATH",
          "line_number": 9
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 21
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 21,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 2.1,
      "sha1": "d2040b5ee9d9c185e0f31dce5477db12e258235d",
      "last_modified": "2025-05-09T02:00:34",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/prefill_price_history.py",
      "imports": [
        "core.data_provider.fetch_stock_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "datetime.datetime",
        "integrations.zerodha_fetcher.INTERVAL_LIMIT_DAYS",
        "pandas",
        "pathlib.Path"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "FileNotFoundError",
        "Path",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "fetch_stock_data",
        "len",
        "load_symbols",
        "logger.start",
        "logger.success",
        "logger.warning",
        "path.exists",
        "pd.read_csv",
        "prefill_all"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:path",
          "line_number": 21
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 42,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_symbols",
        "prefill_all"
      ],
      "risk_score": 29.4,
      "sha1": "d14ddac4300425afd7de546bc5c5158cc389d042",
      "last_modified": "2025-05-21T09:42:53",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/reset_system.py",
      "imports": [
        "argparse",
        "core.logger.logger",
        "db.db_router.run_query",
        "os",
        "pathlib.Path",
        "shutil",
        "sys"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "Path",
        "argparse.ArgumentParser",
        "clear_cache_dirs",
        "delete_model_files",
        "drop_partitioned_feature_tables",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "main",
        "model_dir.exists",
        "model_dir.mkdir",
        "parser.add_argument",
        "parser.parse_args",
        "path.exists",
        "path.mkdir",
        "run_query",
        "shutil.rmtree",
        "sys.exit"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "drop_partitioned_feature_table",
        "pg_table"
      ],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 79,
      "cyclomatic_complexity": 10,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "drop_partitioned_feature_tables",
        "delete_model_files",
        "clear_cache_dirs",
        "main"
      ],
      "risk_score": 79.0,
      "sha1": "f046bf655df16fc00a2f9ae14b2980cb61e2263b",
      "last_modified": "2025-05-02T03:22:00",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./scripts/seed_training_data.py",
      "imports": [
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "astype",
        "dropna",
        "features.merge",
        "len",
        "load_data",
        "logger.error",
        "logger.success",
        "save_data",
        "seed_training_data"
      ],
      "transforms_applied": [
        "merge"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "stock_features",
          "line_number": 7
        },
        {
          "function_called": "load_data",
          "target_argument": "paper_trades",
          "line_number": 8
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 20
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 24,
      "cyclomatic_complexity": 3,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "seed_training_data"
      ],
      "risk_score": 7.2,
      "sha1": "6beed5f21787498a0c71ca21acc921d5c5ea2b91",
      "last_modified": "2025-05-07T15:16:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/update_prices.py",
      "imports": [
        "core.data_provider.cache_price",
        "core.price_service.get_prices",
        "core.time_context.get_simulation_date",
        "db.postgres_manager.get_all_symbols"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "cache_price",
        "get_all_symbols",
        "get_prices",
        "get_simulation_date"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 9,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 1.8,
      "sha1": "8ac1218072456b60070277c6afa332579b3d8342",
      "last_modified": "2025-05-20T23:25:59",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./scripts/__archive__/execution_agent.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "datetime.datetime",
        "os",
        "pandas",
        "time",
        "utils.file_io.load_dataframe",
        "utils.file_io.save_dataframe",
        "yfinance"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ExecutionAgent",
        "ExecutionAgent.run",
        "all",
        "datetime.now",
        "datetime.now.strftime",
        "df.head",
        "exited.append",
        "float",
        "len",
        "load_data",
        "load_dataframe",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "new_positions.append",
        "open_positions.iterrows",
        "os.getenv",
        "pd.DataFrame",
        "pd.concat",
        "pd.isna",
        "recommendations.iterrows",
        "remaining.append",
        "rolling",
        "rolling.mean",
        "row.get",
        "save_data",
        "save_dataframe",
        "self.check_exit_condition",
        "self.enter_trades",
        "self.exit_trades",
        "self.load_open_positions",
        "self.load_recommendations",
        "self.load_today_price",
        "self.log_trades",
        "time.time",
        "yf.download"
      ],
      "transforms_applied": [
        "concat",
        "rolling"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "recommendations",
          "line_number": 23
        },
        {
          "function_called": "load_data",
          "target_argument": "open_positions",
          "line_number": 28
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:open_positions",
          "line_number": 105
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 109,
      "cyclomatic_complexity": 14,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "ExecutionAgent",
        "ExecutionAgent.__init__",
        "ExecutionAgent.load_recommendations",
        "ExecutionAgent.load_open_positions",
        "ExecutionAgent.load_today_price",
        "ExecutionAgent.check_exit_condition",
        "ExecutionAgent.log_trades",
        "ExecutionAgent.enter_trades",
        "ExecutionAgent.exit_trades",
        "ExecutionAgent.run"
      ],
      "risk_score": 152.6,
      "sha1": "c0c2f4d42493aa2e9122a6d289d3ca991cf82615",
      "last_modified": "2025-05-02T02:56:18",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/__archive__/planner_agent.py",
      "imports": [
        "agents.execution_agent_sql.ExecutionAgent",
        "agents.memory_agent.MemoryAgent",
        "agents.strategy_agent.StrategyAgent",
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "datetime.datetime",
        "fundamentals.fundamental_data_extractor",
        "models.stock_filter_predictor.run_stock_filter",
        "os",
        "pandas",
        "services.feedback_loop.update_training_data",
        "stock_selecter.auto_filter_selector.auto_select_filter",
        "utils.file_io.save_dataframe"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ExecutionAgent",
        "MemoryAgent",
        "PlannerAgent",
        "PlannerAgent.run_weekly_routine",
        "StrategyAgent",
        "datetime.now",
        "datetime.now.strftime",
        "fde.fetch_all",
        "len",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "os.path.exists",
        "pd.DataFrame",
        "pd.DataFrame.sort_values",
        "pd.DataFrame.sort_values.head",
        "results.append",
        "run_stock_filter",
        "save_data",
        "self.execution_agent.run",
        "self.memory_agent.update",
        "self.strategy_agent.evaluate",
        "tolist",
        "update_training_data"
      ],
      "transforms_applied": [
        "sort_values"
      ],
      "modifies_stream": true,
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:df",
          "line_number": 57
        }
      ],
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "ml_selected_stocks",
          "line_number": 43
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 1,
      "loc": 70,
      "cyclomatic_complexity": 7,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "PlannerAgent",
        "PlannerAgent.__init__",
        "PlannerAgent.run_weekly_routine"
      ],
      "risk_score": 49.0,
      "sha1": "53c370401b781573b4365332c8ea3edd9bce706a",
      "last_modified": "2025-05-02T02:56:21",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./scripts/__archive__/train_dual_model.py",
      "imports": [
        "config.paths.PATHS",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.model_io.save_model",
        "json",
        "os",
        "pandas",
        "pickle",
        "sklearn.ensemble.RandomForestClassifier",
        "sklearn.ensemble.RandomForestRegressor",
        "sklearn.metrics.classification_report",
        "sklearn.metrics.mean_squared_error",
        "sklearn.model_selection.train_test_split",
        "sklearn.preprocessing.LabelEncoder",
        "utils.file_io.load_dataframe"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "LabelEncoder",
        "LabelEncoder.fit_transform",
        "RandomForestClassifier",
        "RandomForestRegressor",
        "astype",
        "clf.fit",
        "clf.score",
        "df.drop",
        "features.select_dtypes",
        "json.dump",
        "len",
        "load_dataframe",
        "logger.info",
        "logger.success",
        "logger.warning",
        "mean_squared_error",
        "open",
        "pd.Timestamp.now",
        "pd.Timestamp.now.strftime",
        "reg.fit",
        "reg.predict",
        "replace",
        "save_model",
        "train_dual_models",
        "train_test_split"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_save_operations": [
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 44
        },
        {
          "function_called": "save_model",
          "target_argument": null,
          "line_number": 55
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 65,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "train_dual_models"
      ],
      "risk_score": 32.5,
      "sha1": "799546fac0da7e300040c42e55ea1fc6c4c42c85",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./services/exit_policy_evaluator.py",
      "imports": [
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.model_io.load_model",
        "core.time_context.get_simulation_date",
        "numpy",
        "pandas",
        "pydantic.BaseModel",
        "traceback",
        "typing.Literal",
        "typing.Optional"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "enrich_multi_interval_features",
        "fillna",
        "fillna.replace",
        "float",
        "get_exit_probability",
        "get_simulation_date",
        "load_model",
        "logger.warning",
        "model.predict_proba",
        "pd.isna",
        "pd.to_datetime",
        "position.get",
        "traceback.format_exc"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "var:model_name",
          "line_number": 41
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 1,
      "loc": 53,
      "cyclomatic_complexity": 5,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "module-level",
        "ExitRule",
        "should_exit_model_based"
      ],
      "risk_score": 19.88,
      "sha1": "46709c7636d967bb4d9b337da5036f243235c50e",
      "last_modified": "2025-05-24T14:32:43",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./services/feedback_loop.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.feature_enricher_multi.enrich_multi_interval_features",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "json",
        "pandas",
        "pytz.timezone",
        "rl.replay_buffer.ReplayBuffer"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "ReplayBuffer",
        "apply",
        "buffer.add_episode",
        "cfg.get",
        "cfg.get.get",
        "copy",
        "dt.tz_convert",
        "dt.tz_localize",
        "enrich_multi_interval_features",
        "enriched.drop",
        "get_simulation_date",
        "int",
        "isinstance",
        "json.loads",
        "len",
        "load_data",
        "logger.info",
        "logger.start",
        "logger.success",
        "logger.warning",
        "parse_exit_field",
        "pd.Timedelta",
        "pd.concat",
        "pd.to_datetime",
        "pd.to_datetime.astimezone",
        "row.get",
        "rows.append",
        "save_data",
        "timezone",
        "to_dict",
        "today.date",
        "trades_today.iterrows",
        "training_df.dropna",
        "ts.normalize",
        "upper"
      ],
      "transforms_applied": [
        "apply",
        "concat"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 31
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:training_df",
          "line_number": 114
        }
      ],
      "db_tables_identified": [
        "trades_table",
        "training_data_table"
      ],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 115,
      "cyclomatic_complexity": 13,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "parse_exit_field",
        "update_training_data"
      ],
      "risk_score": 149.5,
      "sha1": "d23006815ae188f7249a968890710a9fa83ae403",
      "last_modified": "2025-05-24T14:11:57",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./stock_selecter/auto_filter_selector.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "os",
        "pandas",
        "stock_selecter.fallback_technical_filter.run_technical_filter",
        "stock_selecter.stock_screener.run_stock_filter"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "RuntimeError",
        "ValueError",
        "datetime.now",
        "datetime.now.strftime",
        "get_simulation_date",
        "isinstance",
        "join",
        "len",
        "load_data",
        "logger.info",
        "logger.success",
        "logger.warning",
        "os.path.exists",
        "os.path.join",
        "pd.DataFrame",
        "pd.DataFrame.to_csv",
        "pd.to_datetime",
        "pd.to_datetime.dt.normalize",
        "pd.to_datetime.normalize",
        "rejected_reasons.items",
        "run_stock_filter",
        "run_technical_filter",
        "str"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 23
        }
      ],
      "db_tables_identified": [
        "fundamentals_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 70,
      "cyclomatic_complexity": 9,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "auto_select_filter"
      ],
      "risk_score": 63.0,
      "sha1": "d3a26f56d5d35bcec4935abd219f692ec4ff1a9a",
      "last_modified": "2025-05-19T09:16:17",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./stock_selecter/fallback_technical_filter.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "all_features.groupby",
        "copy",
        "datetime.now",
        "df.iterrows",
        "get_simulation_date",
        "index.tolist",
        "isin",
        "join",
        "len",
        "list",
        "load_data",
        "logger.success",
        "logger.warning",
        "min",
        "min.strftime",
        "nunique",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.max",
        "reasons.append",
        "rejected.iterrows",
        "rejected_dict.items",
        "save_data",
        "str"
      ],
      "transforms_applied": [
        "groupby"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 9
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:result",
          "line_number": 70
        }
      ],
      "db_tables_identified": [
        "feature_table",
        "ml_selected_stocks_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 73,
      "cyclomatic_complexity": 12,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "run_technical_filter"
      ],
      "risk_score": 87.6,
      "sha1": "0cbbfe5782c1b545b093e6e404a32b0f0ca41e99",
      "last_modified": "2025-05-20T12:37:49",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./stock_selecter/stock_screener.py",
      "imports": [
        "core.config.settings",
        "core.data_provider.load_data",
        "core.data_provider.save_data",
        "core.logger.logger",
        "core.time_context.get_simulation_date",
        "datetime.datetime",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "datetime.now",
        "df.rename",
        "dropna",
        "dropna.unique",
        "dropna.unique.tolist",
        "get_simulation_date",
        "input",
        "len",
        "list",
        "load_data",
        "logger.error",
        "logger.info",
        "logger.success",
        "logger.warning",
        "out.drop_duplicates",
        "pd.DataFrame",
        "pd.to_datetime",
        "pd.to_datetime.dt.normalize",
        "pd.to_datetime.normalize",
        "run_stock_filter",
        "save_data"
      ],
      "transforms_applied": [
        "drop_duplicates"
      ],
      "modifies_stream": true,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 67
        },
        {
          "function_called": "load_data",
          "target_argument": null,
          "line_number": 121
        }
      ],
      "data_write_operations": [
        {
          "function_called": "save_data",
          "target_argument": "var:out",
          "line_number": 112
        }
      ],
      "db_tables_identified": [
        "fundamentals_table",
        "ml_selected_stocks_table",
        "output_table"
      ],
      "features_identified": [],
      "function_count": 8,
      "class_count": 0,
      "loc": 130,
      "cyclomatic_complexity": 8,
      "docstring_coverage": 22.22,
      "missing_docstrings": [
        "module-level",
        "filter_growth_stocks",
        "filter_value_stocks",
        "filter_momentum_stocks",
        "filter_defensive_stocks",
        "filter_small_cap_gems",
        "filter_high_volatility_stocks"
      ],
      "risk_score": 80.89,
      "sha1": "5163db784f73fe1082f4c783947c679ec89162ee",
      "last_modified": "2025-05-19T09:22:52",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./tests/conftest.py",
      "imports": [
        "pandas",
        "pytest"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "pd.DataFrame"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 22,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 100.0,
      "missing_docstrings": [],
      "risk_score": 0.11,
      "sha1": "7e11356180b839bfff36fc0d82e976608969764f",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/test_data_audit.py",
      "imports": [
        "analysis.data_audit.main",
        "core.data_provider",
        "json",
        "pandas",
        "pathlib.Path",
        "sys"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "audit_main",
        "json.dumps",
        "json.loads",
        "monkeypatch.setattr",
        "pd.DataFrame",
        "pd.DataFrame.astype",
        "print",
        "report_file.exists",
        "report_file.read_text",
        "str"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 39,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "test_data_audit_threshold_behavior",
        "mock_load_data"
      ],
      "risk_score": 15.6,
      "sha1": "4c3d62a1e1e82b0daea8d09bea02949b3568644b",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/test_data_checks.py",
      "imports": [
        "core.validation.data_checks.check_missing",
        "core.validation.data_checks.class_balance",
        "core.validation.data_checks.detect_outliers",
        "numpy",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "abs",
        "any",
        "bool",
        "check_missing",
        "class_balance",
        "detect_outliers",
        "pd.DataFrame"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 5,
      "class_count": 0,
      "loc": 57,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 16.67,
      "missing_docstrings": [
        "test_check_missing",
        "test_class_balance",
        "test_detect_outliers_zscore",
        "test_detect_outliers_iqr",
        "test_detect_outliers_zscore"
      ],
      "risk_score": 4.75,
      "sha1": "e10cc50e20c706d86361c7805de307cf37d4c028",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/test_feature_pipeline.py",
      "imports": [
        "analysis.feature_pipeline.check_temporal_alignment",
        "analysis.feature_pipeline.detect_high_correlation",
        "numpy",
        "pandas",
        "pytest"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "check_temporal_alignment",
        "detect_high_correlation",
        "pd.DataFrame",
        "pd.to_datetime",
        "pytest.raises"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 38,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "test_temporal_alignment_pass",
        "test_temporal_alignment_fail",
        "test_high_correlation_detection"
      ],
      "risk_score": 5.7,
      "sha1": "2fdc3606ca20d49b40bd0d61630a25b7c37c72c3",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/test_feedback_loop.py",
      "imports": [
        "analysis.feedback_loop.main",
        "core.data_provider",
        "pandas",
        "pytest"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "feedback_main",
        "monkeypatch.setattr",
        "pd.DataFrame"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 46,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "dummy_feedback_data",
        "test_feedback_loop_kpis"
      ],
      "risk_score": 3.07,
      "sha1": "8fb42324cdc9380cb834fd175491955adc04520e",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/test_model_health.py",
      "imports": [
        "analysis.model_health",
        "core.data_provider",
        "os",
        "pandas",
        "pytest"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "any",
        "model_health.main",
        "monkeypatch.setattr",
        "os.chdir",
        "os.getcwd",
        "pd.DataFrame",
        "pd.date_range",
        "str",
        "str.endswith",
        "tmp_path.iterdir"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 35,
      "cyclomatic_complexity": 2,
      "docstring_coverage": 33.33,
      "missing_docstrings": [
        "dummy_model_metadata",
        "test_model_drift_detection"
      ],
      "risk_score": 4.67,
      "sha1": "9322b7d4d427645d559706dea186ef501b1dc1c1",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./tests/__init__.py",
      "imports": [],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 0,
      "class_count": 0,
      "loc": 1,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level"
      ],
      "risk_score": 0.1,
      "sha1": "d385e302378eae3c3b4c8c4fb5b3c5dd059755e6",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [
        "module-type:test"
      ],
      "risk_flags": [
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./utils/file_io.py",
      "imports": [
        "core.logger.logger",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "df.to_csv",
        "logger.error",
        "logger.info",
        "os.makedirs",
        "os.path.dirname",
        "os.path.exists",
        "pd.DataFrame",
        "pd.read_csv"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_write_operations": [
        {
          "function_called": "df.to_csv",
          "target_argument": "var:path",
          "line_number": 19
        }
      ],
      "data_read_operations": [
        {
          "function_called": "pd.read_csv",
          "target_argument": "var:path",
          "line_number": 9
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 20,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_dataframe",
        "save_dataframe"
      ],
      "risk_score": 8.0,
      "sha1": "bc25af31e2f971735d0ae991d428b822c69bea51",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./utils/precheck_features.py",
      "imports": [
        "config.paths.PATHS",
        "core.data_provider.load_data",
        "core.feature_generator.generate_features",
        "core.logger.logger",
        "core.model_io.load_model",
        "datetime.datetime",
        "json",
        "os",
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "any",
        "col.lower",
        "dropna",
        "json.dump",
        "len",
        "load_data",
        "load_model",
        "logger.error",
        "logger.info",
        "logger.warning",
        "open",
        "str",
        "sum",
        "tail",
        "tail.isna",
        "tail.isna.any",
        "valid.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "filter_model",
          "line_number": 17
        }
      ],
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:stock",
          "line_number": 27
        },
        {
          "function_called": "load_data",
          "target_argument": "var:stock",
          "line_number": 78
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 104,
      "cyclomatic_complexity": 19,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "get_model_features",
        "is_feature_usable",
        "prefilter_valid_stocks"
      ],
      "risk_score": 197.6,
      "sha1": "919fb3c74127a5a02ac6b3ec7b26b303c00cf4f9",
      "last_modified": "2025-04-26T22:51:35",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./utils/progress_logger.py",
      "imports": [
        "datetime.datetime",
        "sqlite3"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "conn.close",
        "conn.commit",
        "conn.cursor",
        "cursor.execute",
        "datetime.now",
        "datetime.now.strftime",
        "print",
        "sqlite3.connect"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 33,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "log_model_progress"
      ],
      "risk_score": 3.3,
      "sha1": "915d5f851a618cfe5a50cd148f8a5778ce264926",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./utils/skiplist_manager.py",
      "imports": [
        "db.db_router.run_query",
        "json",
        "os"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "json.dump",
        "json.load",
        "load_failed_precheck",
        "open",
        "os.path.exists",
        "run_query",
        "set"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 4,
      "class_count": 0,
      "loc": 34,
      "cyclomatic_complexity": 6,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "load_skiplist",
        "add_to_skiplist",
        "load_failed_precheck",
        "add_failed_precheck"
      ],
      "risk_score": 20.4,
      "sha1": "acc078b6963c424902008c8b14127e699118e678",
      "last_modified": "2025-04-27T04:48:15",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./utils/sql_utils.py",
      "imports": [
        "config.sql_tables.SQL_TABLES"
      ],
      "project_dependencies": [],
      "generic_function_calls": [],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [
        "SQL_TABLE",
        "is_sql_table",
        "sql_table"
      ],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 5,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "is_sql_table"
      ],
      "risk_score": 0.5,
      "sha1": "dd8c6d7c1e621369f3bcf1ae58c33175084c747c",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./utils/stock_health_precheck.py",
      "imports": [
        "core.data_provider.load_data",
        "core.logger.logger"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "any",
        "col.lower",
        "dropna",
        "load_data",
        "logger.debug",
        "sum",
        "tail",
        "tail.isna",
        "tail.isna.any"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "data_read_operations": [
        {
          "function_called": "load_data",
          "target_argument": "var:stock",
          "line_number": 8
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 1,
      "class_count": 0,
      "loc": 38,
      "cyclomatic_complexity": 16,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "is_stock_tradeable"
      ],
      "risk_score": 60.8,
      "sha1": "c1db03fabbc4b39614f3d5a639f00407ecabd8a4",
      "last_modified": "2025-04-26T22:58:11",
      "custom_tags": [],
      "risk_flags": [
        "high_complexity (>15)",
        "missing_custom_tags"
      ]
    },
    {
      "file": "./utils/stock_precheck.py",
      "imports": [
        "config.paths.PATHS",
        "core.feature_generator.generate_features",
        "core.logger.logger",
        "core.model_io.load_model"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "generate_features",
        "is_feature_ready",
        "len",
        "load_model",
        "logger.debug",
        "logger.info",
        "logger.warning",
        "skipped.append",
        "valid.append"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "model_load_operations": [
        {
          "function_called": "load_model",
          "target_argument": "filter_model",
          "line_number": 10
        }
      ],
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 41,
      "cyclomatic_complexity": 11,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "is_feature_ready",
        "filter_valid_stocks"
      ],
      "risk_score": 45.1,
      "sha1": "609f64b96f0bb2e0251553ea1f0a757eac28e17d",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags"
      ]
    },
    {
      "file": "./utils/technical_indicators.py",
      "imports": [
        "pandas"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "avg_loss.replace",
        "delta.where",
        "gain.rolling",
        "gain.rolling.mean",
        "loss.rolling",
        "loss.rolling.mean",
        "series.diff",
        "series.rolling",
        "series.rolling.mean"
      ],
      "transforms_applied": [
        "rolling"
      ],
      "modifies_stream": true,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 2,
      "class_count": 0,
      "loc": 18,
      "cyclomatic_complexity": 1,
      "docstring_coverage": 0.0,
      "missing_docstrings": [
        "module-level",
        "compute_sma",
        "compute_rsi"
      ],
      "risk_score": 1.8,
      "sha1": "aad61082dd3409d75aa0bfb08acc0d9e4cc09e0f",
      "last_modified": "2025-04-23T04:40:56",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    },
    {
      "file": "./utils/time_utils.py",
      "imports": [
        "pandas",
        "pytz.timezone"
      ],
      "project_dependencies": [],
      "generic_function_calls": [
        "dt.tz_convert",
        "dt.tz_convert.dt.tz_localize",
        "dt.tz_localize",
        "dt.tz_localize.dt.tz_localize",
        "hasattr",
        "pd.to_datetime",
        "timezone"
      ],
      "transforms_applied": [],
      "modifies_stream": false,
      "db_tables_identified": [],
      "features_identified": [],
      "function_count": 3,
      "class_count": 0,
      "loc": 33,
      "cyclomatic_complexity": 4,
      "docstring_coverage": 25.0,
      "missing_docstrings": [
        "module-level",
        "to_naive_utc",
        "localize_if_needed"
      ],
      "risk_score": 9.9,
      "sha1": "9cc68b8049f6cc13ca1373c09259650ca5dc3668",
      "last_modified": "2025-05-21T12:57:27",
      "custom_tags": [],
      "risk_flags": [
        "missing_custom_tags",
        "no_configured_io_calls"
      ]
    }
  ],
  "folder_summary": {
    "root": {
      "total_files": 10,
      "total_loc": 1411,
      "total_complexity": 282,
      "total_risk": 9313.3,
      "files_in_folder": [
        "./aaa.py",
        "./aab.py",
        "./generate_project_summary.py",
        "./generate_project_summary_txt.py",
        "./generate_stock_labels.py",
        "./generate_training_data.py",
        "./hpo.py",
        "./paper_trader.py",
        "./report_generator.py",
        "./train_strategy_selector.py"
      ]
    },
    "agents": {
      "total_files": 11,
      "total_loc": 1345,
      "total_complexity": 168,
      "total_risk": 2899.4,
      "files_in_folder": [
        "./agents/execution_agent_sql.py",
        "./agents/intraday_planner_agent.py",
        "./agents/memory_agent.py",
        "./agents/planner_agent_sql.py",
        "./agents/planner_router.py",
        "./agents/portfolio_allocator.py",
        "./agents/risk_management_agent.py",
        "./agents/rl_strategy_agent.py",
        "./agents/signal_arbitration_agent.py",
        "./agents/strategy_agent.py",
        "./agents/time_series_agent.py"
      ]
    },
    "config": {
      "total_files": 4,
      "total_loc": 60,
      "total_complexity": 4,
      "total_risk": 4.9,
      "files_in_folder": [
        "./config/paths.py",
        "./config/postgres_config.py",
        "./config/sql_tables.py",
        "./config/system_config.py"
      ]
    },
    "core": {
      "total_files": 24,
      "total_loc": 1670,
      "total_complexity": 181,
      "total_risk": 1860.7500000000002,
      "files_in_folder": [
        "./core/backfill_features_from_existing_prices.py",
        "./core/backtest_bt.py",
        "./core/config.py",
        "./core/data_cleaner.py",
        "./core/data_initializer.py",
        "./core/data_provider.py",
        "./core/feature_enricher.py",
        "./core/feature_enricher_multi.py",
        "./core/grid_predictor.py",
        "./core/logger.py",
        "./core/model_io.py",
        "./core/precompute_features.py",
        "./core/predictor.py",
        "./core/predict_entry_exit_config.py",
        "./core/predict_param_model.py",
        "./core/price_service.py",
        "./core/rl_predictor.py",
        "./core/skiplist.py",
        "./core/strategy_config.py",
        "./core/system_logger.py",
        "./core/system_state.py",
        "./core/time_context.py",
        "./core/token_manager.py",
        "./core/__init__.py"
      ]
    },
    "core/validation": {
      "total_files": 2,
      "total_loc": 50,
      "total_complexity": 6,
      "total_risk": 16.53,
      "files_in_folder": [
        "./core/validation/data_checks.py",
        "./core/validation/__init__.py"
      ]
    },
    "dashboards": {
      "total_files": 1,
      "total_loc": 75,
      "total_complexity": 8,
      "total_risk": 60.0,
      "files_in_folder": [
        "./dashboards/system_dashboard.py"
      ]
    },
    "data_pipeline": {
      "total_files": 1,
      "total_loc": 84,
      "total_complexity": 11,
      "total_risk": 92.4,
      "files_in_folder": [
        "./data_pipeline/zerodha_to_postgres.py"
      ]
    },
    "db": {
      "total_files": 9,
      "total_loc": 810,
      "total_complexity": 57,
      "total_risk": 457.33,
      "files_in_folder": [
        "./db/conflict_utils.py",
        "./db/csv_to_sql.py",
        "./db/db.py",
        "./db/db_manager.py",
        "./db/init_postgres.py",
        "./db/models.py",
        "./db/postgres_manager.py",
        "./db/replay_buffer_sql.py",
        "./db/__init__.py"
      ]
    },
    "diagnosis": {
      "total_files": 11,
      "total_loc": 701,
      "total_complexity": 70,
      "total_risk": 495.07000000000005,
      "files_in_folder": [
        "./diagnosis/clear_all_sql_tables.py",
        "./diagnosis/diagnose_storage.py",
        "./diagnosis/evaluate_model_curves.py",
        "./diagnosis/fix_model_path_usage.py",
        "./diagnosis/migrate_paths_to_sql.py",
        "./diagnosis/migrate_to_sql.py",
        "./diagnosis/seed_training_data.py",
        "./diagnosis/simulate_execution.py",
        "./diagnosis/simulate_history.py",
        "./diagnosis/simulate_history_single.py",
        "./diagnosis/view_predicted_curves.py"
      ]
    },
    "flows": {
      "total_files": 5,
      "total_loc": 579,
      "total_complexity": 41,
      "total_risk": 608.29,
      "files_in_folder": [
        "./flows/auto_pipeline.py",
        "./flows/backfill_1m_features_flow.py",
        "./flows/backfill_pipeline.py",
        "./flows/fundamental_pipeline.py",
        "./flows/trading_pipeline.py"
      ]
    },
    "flows/flows": {
      "total_files": 1,
      "total_loc": 19,
      "total_complexity": 3,
      "total_risk": 5.7,
      "files_in_folder": [
        "./flows/flows/schedule_precompute_features.py"
      ]
    },
    "fundamentals": {
      "total_files": 1,
      "total_loc": 37,
      "total_complexity": 3,
      "total_risk": 11.1,
      "files_in_folder": [
        "./fundamentals/fundamental_data_extractor.py"
      ]
    },
    "integrations": {
      "total_files": 4,
      "total_loc": 142,
      "total_complexity": 23,
      "total_risk": 173.6,
      "files_in_folder": [
        "./integrations/drift_detection.py",
        "./integrations/zerodha_client.py",
        "./integrations/zerodha_fetcher.py",
        "./integrations/__init__.py"
      ]
    },
    "live": {
      "total_files": 3,
      "total_loc": 208,
      "total_complexity": 19,
      "total_risk": 139.6,
      "files_in_folder": [
        "./live/bar_generator.py",
        "./live/tick_collector.py",
        "./live/tick_collector_redis.py"
      ]
    },
    "models": {
      "total_files": 11,
      "total_loc": 893,
      "total_complexity": 80,
      "total_risk": 595.69,
      "files_in_folder": [
        "./models/meta_strategy_selector.py",
        "./models/ml_dual_model_prediction_sql.py",
        "./models/ml_training_sql.py",
        "./models/stock_filter_predictor.py",
        "./models/train_dual_model_sql.py",
        "./models/train_entry_exit_model.py",
        "./models/train_exit_model.py",
        "./models/train_meta_model.py",
        "./models/train_param_model.py",
        "./models/train_stock_filter_model.py",
        "./models/__init__.py"
      ]
    },
    "predictive_trader": {
      "total_files": 10,
      "total_loc": 895,
      "total_complexity": 86,
      "total_risk": 859.4000000000001,
      "files_in_folder": [
        "./predictive_trader/A_tester.py",
        "./predictive_trader/backtest_lstm_predictor.py",
        "./predictive_trader/curve_predictor.py",
        "./predictive_trader/curve_signal_generator.py",
        "./predictive_trader/model_manager.py",
        "./predictive_trader/price_predictor_lgbm.py",
        "./predictive_trader/price_predictor_lstm.py",
        "./predictive_trader/price_predictor_lstm_intraday.py",
        "./predictive_trader/price_predictor_lstm_v2.py",
        "./predictive_trader/trade_signal_generator.py"
      ]
    },
    "reports": {
      "total_files": 1,
      "total_loc": 55,
      "total_complexity": 6,
      "total_risk": 33.0,
      "files_in_folder": [
        "./reports/daily_snapshot.py"
      ]
    },
    "rl": {
      "total_files": 5,
      "total_loc": 212,
      "total_complexity": 18,
      "total_risk": 116.8,
      "files_in_folder": [
        "./rl/replay_buffer.py",
        "./rl/rl_finetune.py",
        "./rl/train_rl_agent.py",
        "./rl/train_rl_intraday.py",
        "./rl/utils.py"
      ]
    },
    "rl/envs": {
      "total_files": 2,
      "total_loc": 318,
      "total_complexity": 23,
      "total_risk": 383.25,
      "files_in_folder": [
        "./rl/envs/offline_env.py",
        "./rl/envs/trading_env.py"
      ]
    },
    "scripts": {
      "total_files": 9,
      "total_loc": 250,
      "total_complexity": 37,
      "total_risk": 155.5,
      "files_in_folder": [
        "./scripts/check_db_orm_match.py",
        "./scripts/fetch_instruments.py",
        "./scripts/generate_token.py",
        "./scripts/init_db.py",
        "./scripts/load_backup_fundamentals.py",
        "./scripts/prefill_price_history.py",
        "./scripts/reset_system.py",
        "./scripts/seed_training_data.py",
        "./scripts/update_prices.py"
      ]
    },
    "scripts/__archive__": {
      "total_files": 3,
      "total_loc": 244,
      "total_complexity": 26,
      "total_risk": 234.1,
      "files_in_folder": [
        "./scripts/__archive__/execution_agent.py",
        "./scripts/__archive__/planner_agent.py",
        "./scripts/__archive__/train_dual_model.py"
      ]
    },
    "services": {
      "total_files": 2,
      "total_loc": 168,
      "total_complexity": 18,
      "total_risk": 169.38,
      "files_in_folder": [
        "./services/exit_policy_evaluator.py",
        "./services/feedback_loop.py"
      ]
    },
    "stock_selecter": {
      "total_files": 3,
      "total_loc": 273,
      "total_complexity": 29,
      "total_risk": 231.49,
      "files_in_folder": [
        "./stock_selecter/auto_filter_selector.py",
        "./stock_selecter/fallback_technical_filter.py",
        "./stock_selecter/stock_screener.py"
      ]
    },
    "tests": {
      "total_files": 7,
      "total_loc": 238,
      "total_complexity": 12,
      "total_risk": 34.0,
      "files_in_folder": [
        "./tests/conftest.py",
        "./tests/test_data_audit.py",
        "./tests/test_data_checks.py",
        "./tests/test_feature_pipeline.py",
        "./tests/test_feedback_loop.py",
        "./tests/test_model_health.py",
        "./tests/__init__.py"
      ]
    },
    "utils": {
      "total_files": 9,
      "total_loc": 326,
      "total_complexity": 63,
      "total_risk": 347.40000000000003,
      "files_in_folder": [
        "./utils/file_io.py",
        "./utils/precheck_features.py",
        "./utils/progress_logger.py",
        "./utils/skiplist_manager.py",
        "./utils/sql_utils.py",
        "./utils/stock_health_precheck.py",
        "./utils/stock_precheck.py",
        "./utils/technical_indicators.py",
        "./utils/time_utils.py"
      ]
    }
  }
}